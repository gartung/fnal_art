diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3d45d8b..a913cd2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,83 +11,93 @@
 #  make install
 #  make package (builds distribution tarfile)
 # ======================================================================
+cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
+cmake_policy(VERSION 3.18)
 
 
-cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
-set(${PROJECT_NAME}_CMAKE_PROJECT_VERSION_STRING 09.37.02.04)
+find_package(cetmodules 2.25.04 REQUIRED)
 
-project(icaruscode LANGUAGES CXX)
+project(icaruscode VERSION 09.37.02.04 LANGUAGES CXX)
 
 message(STATUS
   "\n-- ============================================================================="
   "\n-- === *** Start of configuration of ${PROJECT_NAME} ***"
   "\n-- ===")
 
-# cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
 
-list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules $ENV{ART_DIR}/Modules )
+list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules $ENV{ART_DIR}/Modules)
 
 include(CetCMakeEnv)
 cet_cmake_env()
 
 cet_set_compiler_flags(DIAGS CAUTIOUS
-  WERROR
-  NO_UNDEFINED
-  EXTRA_FLAGS -pedantic -I $ENV{CLANG_FQ_DIR}/include/c++/v1 
+	WERROR
+	NO_UNDEFINED
+	EXTRA_FLAGS -pedantic -I$ENV{CLANG_FQ_DIR}/include/c++/v1
 )
 
-cet_report_compiler_flags()
-
-# these are minimum required versions, not the actual product versions
-find_ups_product( larsoft )
-find_ups_product( larcoreobj )
-find_ups_product( larcorealg )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( larcore )
-find_ups_product( lardata )
-find_ups_product( larevt )
-find_ups_product( larsim )
-find_ups_product( larreco )
-find_ups_product( larana )
-find_ups_product( nusimdata )
-find_ups_product( nug4 )
-find_ups_product( art )
-find_ups_product( canvas )
-find_ups_product( messagefacility )
-find_ups_product( libwda )
-find_ups_product( postgresql )
-find_ups_product( sqlite )
-find_ups_product( eigen )
-find_ups_product( fftw )
-find_ups_product( libwda )
-find_ups_product( ifdh_art )
-find_ups_product( guideline_sl )
-find_ups_root()
-
-find_ups_product( sbnobj )
-find_ups_product( sbncode )
-find_ups_product( icarus_signal_processing )
-find_ups_product( icarusalg )
-find_ups_product( icarusutil )
-find_ups_product( icarus_data )
-
-find_ups_product( artdaq_core )
-find_ups_product( sbndaq_artdaq_core )
-
-cet_find_library( NURANDOM_RANDOMUTILS_NURANDOMSERVICE_SERVICE
-                  NAMES nurandom_RandomUtils_NuRandomService_service
-                  PATHS ENV NURANDOM_LIB NO_DEFAULT_PATH )
-
-# deal with fftw
-cet_find_library(ICARUS_FFTW3_LIBRARY  NAMES fftw3  PATHS ENV FFTW_LIBRARY NO_DEFAULT_PATH )
-cet_find_library(ICARUS_FFTW3F_LIBRARY NAMES fftw3f PATHS ENV FFTW_LIBRARY NO_DEFAULT_PATH )
-cet_find_library(ICARUS_FFTW3L_LIBRARY NAMES fftw3l PATHS ENV FFTW_LIBRARY NO_DEFAULT_PATH )
-cet_find_library(ICARUS_FFTW3Q_LIBRARY NAMES fftw3q PATHS ENV FFTW_LIBRARY NO_DEFAULT_PATH )
-set(ICARUS_FFTW_LIBRARIES ICARUS_FFTW3_LIBRARY ICARUS_FFTW3F_LIBRARY ICARUS_FFTW3L_LIBRARY ICARUS_FFTW3Q_LIBRARY)
-include_directories( $ENV{EIGEN_INC} )
+cet_report_compiler_flags(REPORT_THRESHOLD VERBOSE)
+
+#these are minimum required versions,not thea ctual product versions
+find_package(larsoft)
+find_package(libwda)
+find_package(PostgreSQL)
+find_package(Eigen3)
+find_package(ifbeam)
+find_package(ifdhc)
+find_package(ifdh_art)
+find_package(guideline_sl)
+find_package(range-v3)
+find_package(sbnobj)
+find_package(sbndaq-artdaq-core)
+find_package(icarus_signal_processing)
+find_package(icarusalg)
+find_package(icarusutil)
+find_package(icarus_data)
+
+find_package(artdaq_core)
+
+find_package(larcoreobj)
+find_package(larcorealg)
+find_package(lardataobj)
+find_package(lardataalg)
+find_package(larcore)
+find_package(lardata)
+find_package(larvecutils)
+find_package(larsim)
+find_package(larevt)
+find_package(larreco)
+find_package(larana)
+find_package(larpandora)
+find_package(larpandoracontent)
+find_package(nusimdata)
+find_package(nurandom)
+find_package(nug4)
+find_package(art)
+find_package(canvas)
+find_package(messagefacility)
+find_package(FFTW3)
+find_package(libwda)
+find_package(ifdh_art)
+find_package(ROOT)
+find_package(Boost COMPONENTS system)
+find_package(protobuf)
+find_package(PandoraSDK)
+find_package(PandoraMonitoring)
+find_package(SQLite3)
+find_package(artdaq_core)
+find_package(sbndaq_artdaq_core)
+find_package(sbndaq-artdaq-core)
+find_package(PostgreSQL)
+
+cet_find_library(PQ NAMES pq )
+
+#deal with fftw
+find_package( PkgConfig REQUIRED)
+pkg_search_module(FFTW3 REQUIRED IMPORTED_TARGET GLOBAL fftw3f fftw3 fftw3q fftw3l fftw3_threads fftw3f_threeads fftw3q_threads)
+set(ICARUS_FFTW_LIBRARIES PkgConfig::FFTW3)
+
 
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
@@ -106,10 +115,8 @@ add_subdirectory(test)
 add_subdirectory(fcl)
 
 # ups - table and config files
-add_subdirectory(ups)
 
 # packaging utility
-include(UseCPack)
 
 message(STATUS
   "\n-- ==="
@@ -119,3 +126,4 @@ message(STATUS
   "\n-- "
   )
 
+cet_cmake_config()
diff --git a/icaruscode/Analysis/CMakeLists.txt b/icaruscode/Analysis/CMakeLists.txt
index 63c9487..8969fc5 100644
--- a/icaruscode/Analysis/CMakeLists.txt
+++ b/icaruscode/Analysis/CMakeLists.txt
@@ -1,40 +1,42 @@
 add_subdirectory(tools)
 add_subdirectory(overburden)
 
-art_make( MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation nug4_ParticleNavigation
-                           lardataobj_Simulation
-                           lardata_Utilities
-                           larevt_Filters
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardataobj_RawData
-                           larevt_CalibrationDBI_Providers
-                           nurandom_RandomUtils_NuRandomService_service
-			   sbnobj_Common_Analysis
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common
-                           art_Persistency_Provenance
-                           art_Utilities
-                           canvas
-                           ${MF_MESSAGELOGGER}
-                           ${MF_UTILITIES}
-                           ${FHICLCPP}
-                           ${CETLIB}
-                           cetlib_except
-                           ${CLHEP}
-                           ${ROOT_GEOM}
-                           ${ROOT_XMLIO}
-                           ${ROOT_GDML}
-                           ${ROOT_BASIC_LIB_LIST}
-                           icaruscode_RecoUtils
-        )
+art_make(MODULE_LIBRARIES larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		larsim::Simulation
+		nug4::ParticleNavigation
+		lardataobj::Simulation
+		lardata::Utilities
+		larevt::Filters
+		larsim::MCCheater_BackTrackerService_service
+		larsim::MCCheater_ParticleInventoryService_service
+		lardataobj::RawData
+		larevt::CalibrationDBI_Providers
+		nurandom::RandomUtils_NuRandomService_service
+		sbnobj::Common_Analysis
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support
+		ROOT::Core
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art_root_io::TFileService_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		CLHEP::Random
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+		icaruscode::RecoUtils
+		Eigen3::Eigen
+		)
 
 #install_headers()
 install_fhicl()
diff --git a/icaruscode/Analysis/overburden/CMakeLists.txt b/icaruscode/Analysis/overburden/CMakeLists.txt
index e366278..2fc79a7 100644
--- a/icaruscode/Analysis/overburden/CMakeLists.txt
+++ b/icaruscode/Analysis/overburden/CMakeLists.txt
@@ -1,36 +1,35 @@
 art_make(
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardataobj_MCBase
-                           larreco_RecoAlg
-                           lardata_RecoObjects  
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
-                           ${MF_MESSAGELOGGER}
-                           
-                           ${FHICLCPP}
-                           ${ROOT_GEOM}
-                           ${ROOT_XMLIO}
-                           ${ROOT_GDML}
-                           ${ROOT_BASIC_LIB_LIST}
-                           icaruscode_RecoUtils
-        )
+MODULE_LIBRARIES larcorealg::Geometry
+	larcore::Geometry_Geometry_service
+	larsim::Simulation
+        lardataobj::Simulation
+	larsim::MCCheater_BackTrackerService_service
+	larsim::MCCheater_ParticleInventoryService_service
+	lardata::Utilities
+	larevt::Filters
+	lardataobj::RawData
+	lardataobj::RecoBase
+	lardataobj::MCBase
+	larreco::RecoAlg
+	lardata::RecoObjects
+	larpandora::LArPandoraInterface
+	nusimdata::SimulationBase
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art_root_io::tfile_support ROOT::Core
+	art_root_io::TFileService_service
+	art::Persistency_Common
+	art::Persistency_Provenance
+	art::Utilities canvas::canvas
+	messagefacility::MF_MessageLogger
+	fhiclcpp::fhiclcpp
+	ROOT::Geom
+	ROOT::XMLIO
+	ROOT::Gdml
+	icaruscode::RecoUtils
+	)
 
-# install_headers()
+#install_headers()
 install_fhicl()
 install_source()
diff --git a/icaruscode/Analysis/tools/CMakeLists.txt b/icaruscode/Analysis/tools/CMakeLists.txt
index 705f2cf..57824ad 100644
--- a/icaruscode/Analysis/tools/CMakeLists.txt
+++ b/icaruscode/Analysis/tools/CMakeLists.txt
@@ -2,40 +2,39 @@ cet_enable_asserts()
 add_subdirectory(MCTruth)
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
+include_directories(${FFTW3_INCLUDE_DIRS})
 
-art_make( TOOL_LIBRARIES lardataobj_RecoBase
-                         lardataobj_Simulation
-                         lardataalg_DetectorInfo
-                         icaruscode_TPC_SignalProcessing_RawDigitFilter_Algorithms
-                         larcorealg_Geometry
-                         larcore_Geometry_Geometry_service
-                         lardata_RecoObjects
-                         lardata_Utilities
-                         nusimdata_SimulationBase
-                         larsim_Simulation
-                         nusimdata_SimulationBase
-                         ${ART_FRAMEWORK_CORE}
-                         ${ART_FRAMEWORK_PRINCIPAL}
-                         ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                         ${ART_FRAMEWORK_SERVICES_BASIC}
-                         ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                         ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                         ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                         art_Persistency_Common
-                         art_Persistency_Provenance
-                         art_Utilities
-                         canvas
-                         ${MF_MESSAGELOGGER}
-                         ${MF_UTILITIES}
-                         ${FHICLCPP}
-                         ${CETLIB}
-                         cetlib_except
-                         ${Boost_FILESYSTEM_LIBRARY}
-                         ${Boost_SYSTEM_LIBRARY}
-                         ${CLHEP}
-                         ${ROOT_BASIC_LIB_LIST}
-                         ${ROOT_MINUIT}
-        )
+art_make(TOOL_LIBRARIES lardataobj::RecoBase
+		lardataobj::Simulation
+		lardataalg::DetectorInfo
+		icaruscode::TPC_SignalProcessing_RawDigitFilter_Algorithms
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		lardata::RecoObjects
+		lardata::Utilities
+		nusimdata::SimulationBase
+		larsim::Simulation
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		
+		art_root_io::tfile_support ROOT::Core
+		art_root_io::TFileService_service
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		Boost::filesystem
+		Boost::system
+		CLHEP::Random
+		ROOT::Minuit ROOT::Tree
+		)
 
 install_headers()
 install_source()
diff --git a/icaruscode/Analysis/tools/MCTruth/CMakeLists.txt b/icaruscode/Analysis/tools/MCTruth/CMakeLists.txt
index dffd9bf..8ab1312 100644
--- a/icaruscode/Analysis/tools/MCTruth/CMakeLists.txt
+++ b/icaruscode/Analysis/tools/MCTruth/CMakeLists.txt
@@ -1,65 +1,63 @@
 cet_enable_asserts()
 
-art_make( MODULE_LIBRARIES lardataobj_RecoBase
-                           larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           lardata_RecoObjects
-                           lardata_Utilities
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           icarusalg_gallery_MCTruthBase
-                           nug4_ParticleNavigation
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_FRAMEWORK_SERVICES_BASIC}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                           art_Persistency_Common
-                           art_Persistency_Provenance
-                           art_Utilities
-                           canvas
-                           ${MF_MESSAGELOGGER}
-                           ${MF_UTILITIES}
-                           ${FHICLCPP}
-                           ${CETLIB}
-                           cetlib_except
-                           ${Boost_FILESYSTEM_LIBRARY}
-                           ${Boost_SYSTEM_LIBRARY}
-                           ${CLHEP}
-                           ${ROOT_BASIC_LIB_LIST}
+art_make(MODULE_LIBRARIES lardataobj::RecoBase
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		lardata::RecoObjects
+		lardata::Utilities
+		larsim::MCCheater_BackTrackerService_service
+		larsim::MCCheater_ParticleInventoryService_service
+		icarusalg::gallery_MCTruthBase
+		nug4::ParticleNavigation
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		
+		art_root_io::tfile_support ROOT::Core
+		art_root_io::TFileService_service
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		Boost::filesystem
+		Boost::system
+		CLHEP::Random
 
-          TOOL_LIBRARIES   lardataobj_RecoBase
-                           larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           lardata_RecoObjects
-                           lardata_Utilities
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           icarusalg_gallery_MCTruthBase
-                           nug4_ParticleNavigation
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_FRAMEWORK_SERVICES_BASIC}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                           art_Persistency_Common
-                           art_Persistency_Provenance
-                           art_Utilities
-                           canvas
-                           ${MF_MESSAGELOGGER}
-                           ${MF_UTILITIES}
-                           ${FHICLCPP}
-                           ${CETLIB}
-                           cetlib_except
-                           ${Boost_FILESYSTEM_LIBRARY}
-                           ${Boost_SYSTEM_LIBRARY}
-                           ${CLHEP}
-                           ${ROOT_BASIC_LIB_LIST}
-        )
+	TOOL_LIBRARIES lardataobj::RecoBase
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		lardata::RecoObjects
+		lardata::Utilities
+		larsim::MCCheater_BackTrackerService_service
+		larsim::MCCheater_ParticleInventoryService_service
+		icarusalg::gallery_MCTruthBase
+		nug4::ParticleNavigation
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		
+		art_root_io::tfile_support ROOT::Core
+		art_root_io::TFileService_service
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		Boost::filesystem
+		Boost::system
+		CLHEP::Random
+	)
 
 install_headers()
 install_source()
diff --git a/icaruscode/CRT/CMakeLists.txt b/icaruscode/CRT/CMakeLists.txt
index 5dd6b28..9a3948a 100644
--- a/icaruscode/CRT/CMakeLists.txt
+++ b/icaruscode/CRT/CMakeLists.txt
@@ -1,368 +1,315 @@
-include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
-include_directories( $ENV{NURANDOM_INC} )
-include_directories( $ENV{IFDHX_FQ_DIR}/inc )
+include_directories(${CMAKE_CURRENT_SOURCE_DIR})
+include_directories($ENV{NURANDOM_INC})
+include_directories($ENV{IFDHX_FQ_DIR}/inc)
+include_directories(${TRACE_INC})
 
 add_subdirectory(CRTUtils)
 add_subdirectory(CRTDecoder)
 
-art_make(
-    NO_PLUGINS
-    EXCLUDE
-        CRTChannelMapAlg.cxx
-        CRTGeometryHelper_service.cc
-        CRTDetSim_module.cc
-        CRTSimHitProducer_module.cc
-        CRTTrueHitProducer_module.cc
-        CRTTzeroProducer_module.cc
-        CRTTrackProducer_module.cc
-        CRTSimAnalysis_module.cc
-        CRTCalibrationAnalysis_module.cc
-        CRTDataAnalysis_module.cc
-        CrtOpHitMatchAnalysis_module.cc
-        CRTTruthMatchAnalysis_module.cc
-        CRTAutoVeto_module.cc
-        FlashResAna_module.cc
-        PhotBackground_module.cc
-        CRTT0Matching_module.cc
-        CRTTPCMatchingAna_module.cc	
-        CRTPMTMatchingAna_module.cc
-    LIBRARY_NAME
-        icaruscode_CRTData
-    LIB_LIBRARIES
-        larcorealg_Geometry
-        larcore_Geometry_Geometry_service
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        canvas
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${MF_MESSAGELOGGER}
-        ${MF_UTILITIES}
-        ${FHICLCPP}
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_GEOM}
-        ${CETLIB}
-)
-
 art_make_library(
-    LIBRARY_NAME
-        icaruscode_CRT
-    SOURCE
-        CRTChannelMapAlg.cxx
-    LIBRARIES larcorealg_Geometry
-        icaruscode_CRTData
-        cetlib_except
-        ${MF_MESSAGELOGGER}
-        ${MF_UTILITIES}
-        ${FHICLCPP}
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_GEOM}
-        ${CETLIB}
-)
+	LIBRARY_NAME
+		icaruscode_CRT
+	SOURCE
+		CRTChannelMapAlg.cxx
+                CRTGeoObjectSorter.cxx
+	LIBRARIES larcorealg::Geometry
+		sbnobj::ICARUS_CRT
+		cetlib_except::cetlib_except
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+	        art::Framework_Services_Registry
+	        CLHEP::CLHEP	
+		ROOT::Geom
+		cetlib::cetlib
+	)
 
 simple_plugin(CRTGeometryHelper service
-              larcorealg_Geometry
-              icaruscode_CRT
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-)
+	larcorealg::Geometry
+	larcore::Geometry_Geometry_service
+	icaruscode::CRT
+	art_root_io::TFileService_service
+	art::Framework_Services_Registry
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	
+	)
 
 simple_plugin(CRTDetSim module
-              larcorealg_Geometry
-              icaruscode_CRT
-              icaruscode_CRTData
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              lardataalg_DetectorInfo
-              nurandom_RandomUtils_NuRandomService_service
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-              ${CLHEP}
-)
+	larcorealg::Geometry
+	icaruscode::CRT
+	sbnobj::ICARUS_CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	art_root_io::TFileService_service
+	lardataalg::DetectorInfo
+	nurandom::RandomUtils_NuRandomService_service
+	art::Framework_Services_Registry
+	art::Framework_Services_Optional_RandomNumberGenerator_service
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	CLHEP::CLHEP
+	)
 
 simple_plugin(CRTSimHitProducer module
-              larcorealg_Geometry
-              icaruscode_CRT
-              icaruscode_CRTData
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              lardataalg_DetectorInfo
-              nurandom_RandomUtils_NuRandomService_service
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-              ${CLHEP}
-)
+	larcorealg::Geometry
+	icaruscode::CRT
+	sbnobj::ICARUS_CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	art_root_io::TFileService_service
+	lardataalg::DetectorInfo
+	nurandom::RandomUtils_NuRandomService_service
+	art::Framework_Services_Registry
+	art::Framework_Services_Optional_RandomNumberGenerator_service
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	CLHEP::CLHEP
+	)
 
-simple_plugin( CRTTrueHitProducer module
-        larcorealg_Geometry
-        icaruscode_CRT
-        icaruscode_CRTData
-        sbnobj_Common_CRT
-        icaruscode_CRTUtils
-        ${ART_FRAMEWORK_CORE}
-        ${ART_FRAMEWORK_IO_SOURCES}
-        ${ART_FRAMEWORK_PRINCIPAL}
-        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-        art_Persistency_Provenance
-        canvas
-        cetlib_except
-        lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-        ${MF_MESSAGELOGGER}
-        ${MF_UTILITIES}
-        ${ROOT_BASIC_LIB_LIST}
-        ${CLHEP}
-        ${CETLIB}
-)
+simple_plugin(CRTTrueHitProducer module
+	larcorealg::Geometry
+	icaruscode::CRT
+	sbnobj::ICARUS_CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	art::Framework_Core
+	art::Framework_IO_Sources
+	art::Framework_Principal
+	art_root_io::TFileService_service
+	art::Persistency_Provenance
+	canvas::canvas
+	cetlib_except::cetlib_except
+	lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+	art::Framework_Services_Registry
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	
+	CLHEP::CLHEP
+	cetlib::cetlib
+	)
 
 simple_plugin(CRTTzeroProducer module
-              larcorealg_Geometry
-              icaruscode_CRT
-              icaruscode_CRTData
-              sbnobj_Common_CRT
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              lardataalg_DetectorInfo
-              nurandom_RandomUtils_NuRandomService_service
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-              ${CLHEP}
-)
+	larcorealg::Geometry
+	icaruscode::CRT
+	sbnobj::ICARUS_CRT
+	sbnobj::Common_CRT
+	art_root_io::TFileService_service
+	lardataalg::DetectorInfo
+	nurandom::RandomUtils_NuRandomService_service
+	art::Framework_Services_Registry
+	art::Framework_Services_Optional_RandomNumberGenerator_service
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	
+	CLHEP::CLHEP
+	lardata::Utilities
+	)
 
 simple_plugin(CRTTrackProducer module
-              larcorealg_Geometry
-              icaruscode_CRT
-              icaruscode_CRTData
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              lardataalg_DetectorInfo
-              nurandom_RandomUtils_NuRandomService_service
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-              ${CLHEP}
-)
+	larcorealg::Geometry
+	icaruscode::CRT
+	sbnobj::ICARUS_CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	art_root_io::TFileService_service
+	lardataalg::DetectorInfo
+	nurandom::RandomUtils_NuRandomService_service
+	art::Framework_Services_Registry
+	art::Framework_Services_Optional_RandomNumberGenerator_service
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	
+	CLHEP::CLHEP
+	)
 
 simple_plugin(CRTSimAnalysis module
-              icaruscode_CRTData
-              icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              larcore_Geometry_Geometry_service
-              larcorealg_Geometry
-              nusimdata_SimulationBase
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-              ${ROOT_GEOM}
-              ${ROOT_XMLIO}
-              ${ROOT_GDML}
-)
+	sbnobj::ICARUS_CRT
+	icaruscode::CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	larcore::Geometry_Geometry_service
+	larcorealg::Geometry
+	nusimdata::SimulationBase
+	art::Framework_Services_Registry
+	art_root_io::tfile_support ROOT::Core
+	art_root_io::TFileService_service
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+        ROOT::Core	
+	ROOT::Geom
+	ROOT::XMLIO
+	ROOT::Gdml
+	)
 
 simple_plugin(CRTDataAnalysis module
-              icaruscode_CRTData
-              icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              larcore_Geometry_Geometry_service
-              larcorealg_Geometry
-              nusimdata_SimulationBase
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-              ${ROOT_GEOM}
-              ${ROOT_XMLIO}
-              ${ROOT_GDML}
-)
-simple_plugin(CRTCalibrationAnalysis module
-              icaruscode_CRTData
-              icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              larcore_Geometry_Geometry_service
-              larcorealg_Geometry
-              nusimdata_SimulationBase
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-              ${ROOT_GEOM}
-              ${ROOT_XMLIO}
-              ${ROOT_GDML}
-)
+        artdaq_core::artdaq-core_Data
+	sbnobj::ICARUS_CRT
+	icaruscode::CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	larcore::Geometry_Geometry_service
+	larcorealg::Geometry
+	nusimdata::SimulationBase
+	art::Framework_Services_Registry
+	art_root_io::tfile_support ROOT::Core
+	art_root_io::TFileService_service
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	ROOT::Core
+	ROOT::Geom
+	ROOT::XMLIO
+	ROOT::Gdml
+	)
 
 simple_plugin(CrtOpHitMatchAnalysis module
-              icaruscode_CRTData
-              icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              larcore_Geometry_Geometry_service
-              larcorealg_Geometry
-              nusimdata_SimulationBase
-              lardataobj_RecoBase
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              lardataalg_DetectorInfo
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-)
+	sbnobj::ICARUS_CRT
+	icaruscode::CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	larcore::Geometry_Geometry_service
+	larcorealg::Geometry
+	nusimdata::SimulationBase
+	lardataobj::RecoBase
+	art::Framework_Services_Registry
+	art_root_io::tfile_support ROOT::Core
+	art_root_io::TFileService_service
+	lardataalg::DetectorInfo
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	
+	)
 
 simple_plugin(CRTPMTMatchingAna module
-              icaruscode_CRTData
-	      icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-	      larcore_Geometry_Geometry_service
-              larcorealg_Geometry
-              nusimdata_SimulationBase
-              lardataobj_RecoBase
+              sbnobj::ICARUS_CRT
+	      icaruscode::CRT
+              sbnobj::Common_CRT
+              icaruscode::CRTUtils
+	      larcore::Geometry_Geometry_service
+              larcorealg::Geometry
+              nusimdata::SimulationBase
+              lardataobj::RecoBase
               ${ART_FRAMEWORK_SERVICES_REGISTRY}
               ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
               ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              lardataalg_DetectorInfo
+              lardataalg::DetectorInfo
               ${MF_MESSAGELOGGER}
               ${MF_UTILITIES}
               ${ROOT_BASIC_LIB_LIST}
 )
 
 simple_plugin(CRTTruthMatchAnalysis module
-              icaruscode_CRTData
-              icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              larcore_Geometry_Geometry_service
-              larcorealg_Geometry
-              nusimdata_SimulationBase
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              ${MF_MESSAGELOGGER}
-              ${MF_UTILITIES}
-              ${ROOT_BASIC_LIB_LIST}
-              ${ROOT_GEOM}
-              ${ROOT_XMLIO}
-              ${ROOT_GDML}
-)
+	sbnobj::ICARUS_CRT
+	icaruscode::CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	larcore::Geometry_Geometry_service
+	larcorealg::Geometry
+	nusimdata::SimulationBase
+	art::Framework_Services_Registry
+	art_root_io::tfile_support
+	art_root_io::TFileService_service
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	ROOT::Core
+	ROOT::Geom
+	ROOT::XMLIO
+	ROOT::Gdml
+	)
 
-simple_plugin( CRTAutoVeto module
-                        icaruscode_CRTData
-                        icaruscode_CRT
-                        sbnobj_Common_CRT
-                        icaruscode_CRTUtils
-                        larcore_Geometry_Geometry_service
-                        larcorealg_Geometry
-                        nusimdata_SimulationBase
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        art_Persistency_Common
-                        art_Persistency_Provenance
-                        art_Utilities
-                        canvas
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        cetlib cetlib_except
-                        ${ROOT_BASIC_LIB_LIST}
-                        ${ROOT_GEOM}
-                        ${ROOT_XMLIO}
-                        ${ROOT_GDML}              
-)
+simple_plugin(CRTAutoVeto module
+	sbnobj::ICARUS_CRT
+	icaruscode::CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	larcore::Geometry_Geometry_service
+	larcorealg::Geometry
+	nusimdata::SimulationBase
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art_root_io::tfile_support
+	art_root_io::TFileService_service
+	art::Persistency_Common
+	art::Persistency_Provenance
+	art::Utilities
+	canvas::canvas
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	cetlib::cetlib cetlib_except::cetlib_except
+	ROOT::Core
+	ROOT::Geom
+	ROOT::XMLIO
+	ROOT::Gdml
+	)
 
-simple_plugin( FlashResAna module
-                        larcore_Geometry_Geometry_service
-                        larcorealg_Geometry
-                        nusimdata_SimulationBase
-                        lardataobj_RecoBase
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        art_Persistency_Common
-                        art_Persistency_Provenance
-                        art_Utilities
-                        canvas
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        cetlib cetlib_except
-                        ${ROOT_BASIC_LIB_LIST}
-                        ${ROOT_GEOM}
-                        ${ROOT_XMLIO}
-                        ${ROOT_GDML}              
-)
+simple_plugin(FlashResAna module
+	larcore::Geometry_Geometry_service
+	larcorealg::Geometry
+	nusimdata::SimulationBase
+	lardataobj::RecoBase
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art_root_io::tfile_support
+	art_root_io::TFileService_service
+	art::Persistency_Common
+	art::Persistency_Provenance
+	art::Utilities
+	canvas::canvas
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	cetlib::cetlib cetlib_except::cetlib_except
+        ROOT::Tree
+	ROOT::Core
+	ROOT::Geom
+	ROOT::XMLIO
+	ROOT::Gdml
+	)
 
-simple_plugin( PhotBackground module
-                        larcore_Geometry_Geometry_service
-                        larcorealg_Geometry
-                        nusimdata_SimulationBase
-                        icaruscode_CRTData
-                        icaruscode_CRT
-                        sbnobj_Common_CRT
-                        icaruscode_CRTUtils
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        art_Persistency_Common
-                        art_Persistency_Provenance
-                        art_Utilities
-                        ${ROOT_BASIC_LIB_LIST}
-)
+simple_plugin(PhotBackground module
+	larcore::Geometry_Geometry_service
+	larcorealg::Geometry
+	nusimdata::SimulationBase
+	sbnobj::ICARUS_CRT
+	icaruscode::CRT
+	sbnobj::Common_CRT
+	icaruscode::CRTUtils
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art_root_io::tfile_support
+	art_root_io::TFileService_service
+	art::Persistency_Common
+	art::Persistency_Provenance
+	art::Utilities
+	ROOT::Core
+	)
 
 simple_plugin(CRTT0Matching module
-              icaruscode_CRTData
-              icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              larcore_Geometry_Geometry_service
-              larsim_Simulation lardataobj_Simulation
-              larsim_MCCheater_BackTrackerService_service
-              larsim_MCCheater_ParticleInventoryService_service
-              lardata_Utilities
-              larevt_Filters
-              lardataobj_RawData
-              lardataobj_RecoBase
-              lardataobj_AnalysisBase
-              lardata_RecoObjects
-              larpandora_LArPandoraInterface
-              larcorealg_Geometry
-              nusimdata_SimulationBase
+              sbnobj::ICARUS_CRT
+              icaruscode::CRT
+              sbnobj::Common_CRT
+              icaruscode::CRTUtils
+              larcore::Geometry_Geometry_service
+              larsim::Simulation lardataobj::Simulation
+              larsim::MCCheater_BackTrackerService_service
+              larsim::MCCheater_ParticleInventoryService_service
+              lardata::Utilities
+              larevt::Filters
+              lardataobj::RawData
+              lardataobj::RecoBase
+              lardataobj::AnalysisBase
+              lardata::RecoObjects
+              larpandora::LArPandoraInterface
+              larcorealg::Geometry
+              nusimdata::SimulationBase
               ${ART_FRAMEWORK_SERVICES_REGISTRY}
               ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
               ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              art_Persistency_Common canvas
-              art_Persistency_Provenance canvas
-              art_Utilities canvas
+              art::Persistency_Common canvas::canvas
+              art::Persistency_Provenance
+              art::Utilities
               ${MF_MESSAGELOGGER}
               ${MF_UTILITIES}
               ${ROOT_BASIC_LIB_LIST}
@@ -375,30 +322,30 @@ simple_plugin(CRTT0Matching module
 )
 
 simple_plugin(CRTT0MatchingAna module
-              icaruscode_CRTData
-              icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              larcorealg_Geometry
-              larcore_Geometry_Geometry_service
-              larsim_Simulation lardataobj_Simulation
-              larsim_MCCheater_BackTrackerService_service
-              larsim_MCCheater_ParticleInventoryService_service
-              lardata_Utilities
-              larevt_Filters
-              lardataobj_RawData
-              lardataobj_RecoBase
-              lardataobj_AnalysisBase
-              lardata_RecoObjects
-              larpandora_LArPandoraInterface
-              larcorealg_Geometry
-              nusimdata_SimulationBase
+              sbnobj::ICARUS_CRT
+              icaruscode::CRT
+              sbnobj::Common_CRT
+              icaruscode::CRTUtils
+              larcorealg::Geometry
+              larcore::Geometry_Geometry_service
+              larsim::Simulation lardataobj::Simulation
+              larsim::MCCheater_BackTrackerService_service
+              larsim::MCCheater_ParticleInventoryService_service
+              lardata::Utilities
+              larevt::Filters
+              lardataobj::RawData
+              lardataobj::RecoBase
+              lardataobj::AnalysisBase
+              lardata::RecoObjects
+              larpandora::LArPandoraInterface
+              larcorealg::Geometry
+              nusimdata::SimulationBase
               ${ART_FRAMEWORK_SERVICES_REGISTRY}
               ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
               ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              art_Persistency_Common canvas
-              art_Persistency_Provenance canvas
-              art_Utilities canvas
+              art::Persistency_Common canvas::canvas
+              art::Persistency_Provenance
+              art::Utilities
               ${MF_MESSAGELOGGER}
               ${MF_UTILITIES}
               ${ROOT_BASIC_LIB_LIST}
@@ -411,30 +358,30 @@ simple_plugin(CRTT0MatchingAna module
 )
 
 simple_plugin(CRTTPCMatchingAna module
-              icaruscode_CRTData
-              icaruscode_CRT
-              sbnobj_Common_CRT
-              icaruscode_CRTUtils
-              larcorealg_Geometry
-              larcore_Geometry_Geometry_service
-              larsim_Simulation lardataobj_Simulation
-              larsim_MCCheater_BackTrackerService_service
-              larsim_MCCheater_ParticleInventoryService_service
-              lardata_Utilities
-              larevt_Filters
-              lardataobj_RawData
-              lardataobj_RecoBase
-              lardataobj_AnalysisBase
-              lardata_RecoObjects
-              larpandora_LArPandoraInterface
-              larcorealg_Geometry
-              nusimdata_SimulationBase
+	      sbnobj::ICARUS_CRT
+              icaruscode::CRT
+              sbnobj::Common_CRT
+              icaruscode::CRTUtils
+              larcorealg::Geometry
+              larcore::Geometry_Geometry_service
+              larsim::Simulation lardataobj::Simulation
+              larsim::MCCheater_BackTrackerService_service
+              larsim::MCCheater_ParticleInventoryService_service
+              lardata::Utilities
+              larevt::Filters
+              lardataobj::RawData
+              lardataobj::RecoBase
+              lardataobj::AnalysisBase
+              lardata::RecoObjects
+              larpandora::LArPandoraInterface
+              larcorealg::Geometry
+              nusimdata::SimulationBase
               ${ART_FRAMEWORK_SERVICES_REGISTRY}
               ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
               ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              art_Persistency_Common canvas
-              art_Persistency_Provenance canvas
-              art_Utilities canvas
+              art::Persistency_Common canvas::canvas
+              art::Persistency_Provenance
+              art::Utilities
               ${MF_MESSAGELOGGER}
               ${MF_UTILITIES}
               ${ROOT_BASIC_LIB_LIST}
diff --git a/icaruscode/CRT/CRTDecoder/CMakeLists.txt b/icaruscode/CRT/CRTDecoder/CMakeLists.txt
index c1c1042..344b181 100644
--- a/icaruscode/CRT/CRTDecoder/CMakeLists.txt
+++ b/icaruscode/CRT/CRTDecoder/CMakeLists.txt
@@ -1,127 +1,129 @@
+include_directories(${TRACE_INC})
+
 art_make(
- EXCLUDE
-        CrtCal.cc
-        CrtCalTree.cxx
+	EXCLUDE
+		CrtCal.cc
+		CrtCalTree.cxx
 	CRTTiming.cc
 	CRTRawTree.cc
 	CRTPreProcessTree.cc
 	CRTMergePreProcessTrees.cxx
 	
- NO_PLUGINS # WAnt different link lists for modues
- BASENAME_ONLY
- LIBRARY_NAME sbndaq-artdaq_ArtModules_Common
- LIB_LIBRARIES sbndaq-artdaq-core_Overlays
-               sbndaq-artdaq-core_Overlays_Common
-
+	NO_PLUGINS
+	BASENAME_ONLY
+	LIBRARY_NAME sbndaq-artdaq_ArtModules_Common
+	LIB_LIBRARIES sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays
+		sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common
+                canvas::canvas
 )
 
 art_make_library(
-    LIBRARY_NAME
-        CRT_CAL
-    SOURCE
-        CrtCal.cc
-    LIBRARIES 
-        cetlib_except
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_SPECTRUM}
-        ${ROOT_GEOM}
-        ${ROOT_CORE}
-        ${CETLIB}
+	LIBRARY_NAME
+		CRT_CAL
+	SOURCE
+		CrtCal.cc
+	LIBRARIES
+		cetlib_except::cetlib_except
+                ROOT::Graf
+		ROOT::Spectrum
+		ROOT::Geom
+		ROOT::Core
+                ROOT::Gpad
+		cetlib::cetlib
 )
 
 art_make_library(
-    LIBRARY_NAME
-        CRT_CAL_TREE
-    SOURCE
-        CrtCalTree.cxx
-    LIBRARIES 
-        cetlib_except
-        ${ROOT_CORE}
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_SPECTRUM}
-        ${ROOT_GEOM}
-        ${CETLIB}
-)
+	LIBRARY_NAME
+		CRT_CAL_TREE
+	SOURCE
+		CrtCalTree.cxx
+	LIBRARIES
+		cetlib_except::cetlib_except
+		ROOT::Core
+		ROOT::Spectrum
+		ROOT::Geom
+		cetlib::cetlib
+	)
 
 art_make_library(
-    LIBRARY_NAME
-        CRT_RAW_TREE
-    SOURCE
-        CRTRawTree.cc
-    LIBRARIES 
-        cetlib_except
-        ${ROOT_CORE}
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_SPECTRUM}
-        ${ROOT_GEOM}
-        ${CETLIB}
-)
+	LIBRARY_NAME
+		CRT_RAW_TREE
+	SOURCE
+		CRTRawTree.cc
+	LIBRARIES
+		cetlib_except::cetlib_except
+		ROOT::Core
+		ROOT::Spectrum
+		ROOT::Geom
+		cetlib::cetlib
+	)
 
 art_make_library(
-    LIBRARY_NAME
-        CRT_TIMING
-    SOURCE
-        CRTTiming.cc
-    LIBRARIES 
-        cetlib_except
-        ${ROOT_CORE}
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_SPECTRUM}
-        ${ROOT_GEOM}
-        ${CETLIB}
-	CRT_RAW_TREE
-	CRT_PREPROCESS_TREE
-)
+	LIBRARY_NAME
+		CRT_TIMING
+	SOURCE
+		CRTTiming.cc
+	LIBRARIES
+		cetlib_except::cetlib_except
+		ROOT::Core
+		ROOT::Spectrum
+		ROOT::Geom
+		cetlib::cetlib ROOT::Tree
+		CRT_RAW_TREE
+		CRT_PREPROCESS_TREE
+	)
 
 art_make_library(
-    LIBRARY_NAME
-        CRT_PREPROCESS_TREE
-    SOURCE
-        CRTPreProcessTree.cc
-    LIBRARIES 
-        cetlib_except
-        ${ROOT_CORE}
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_SPECTRUM}
-        ${ROOT_GEOM}
-        ${CETLIB}
-)
+	LIBRARY_NAME
+		CRT_PREPROCESS_TREE
+	SOURCE
+		CRTPreProcessTree.cc
+	LIBRARIES
+		cetlib_except::cetlib_except
+		ROOT::Core
+		ROOT::Spectrum
+		ROOT::Geom
+		cetlib::cetlib
+	)
 
 art_make_library(
-    LIBRARY_NAME
-        CRT_MERGE_PREPROCESS_TREE
-    SOURCE
-        CRTMergePreProcessTrees.cxx
-    LIBRARIES 
-        cetlib_except
-        ${ROOT_CORE}
-        ${ROOT_BASIC_LIB_LIST}
-        ${ROOT_SPECTRUM}
-        ${ROOT_GEOM}
-        ${CETLIB}
-	CRT_TIMING
-	CRT_PREPROCESS_TREE
+	LIBRARY_NAME
+		CRT_MERGE_PREPROCESS_TREE
+	SOURCE
+		CRTMergePreProcessTrees.cxx
+	LIBRARIES
+		cetlib_except::cetlib_except
+		ROOT::Core
+		ROOT::Spectrum
+		ROOT::Geom
+                ROOT::Tree
+		cetlib::cetlib
+		CRT_TIMING
+		CRT_PREPROCESS_TREE
 )
 
 install_headers()
 install_source()
 
-simple_plugin( BernCRTAna "module"
-  art_Framework_Services_Registry
-  art_root_io_tfile_support
-  art_root_io_TFileService_service
-  ${ROOT_BASIC_LIB_LIST}
+cet_build_plugin( BernCRTAna art::module
+  LIBRARIES
+  art::Framework_Services_Registry
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  ROOT::Core ROOT::Tree
+  canvas::canvas
         ${ARTDAQ-CORE_UTILITIES}
   sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common 
   artdaq_core::artdaq-core_Data
 )
 
 simple_plugin( CrtNoiseMonTool "module"
-  art_Framework_Services_Registry
-  art_root_io_tfile_support
-  art_root_io_TFileService_service
-  #art_Framework_Services_Optional
-  #art_Framework_Services_Optional_TFileService_service
+  art::Framework_Services_Registry
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  #art::Framework_Services_Optional
+  #art::Framework_Services_Optional_TFileService_service
+  ROOT::Core ROOT::Tree ROOT::Hist
   ${ROOT_BASIC_LIB_LIST}
         ${ARTDAQ-CORE_UTILITIES}
   sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common 
@@ -129,11 +131,12 @@ simple_plugin( CrtNoiseMonTool "module"
 )
 
 simple_plugin( CrtCalAnalysis "module"
-  art_Framework_Services_Registry
-  art_root_io_tfile_support
-  art_root_io_TFileService_service
-  #art_Framework_Services_Optional
-  #art_Framework_Services_Optional_TFileService_service
+  art::Framework_Services_Registry
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  #art::Framework_Services_Optional
+  #art::Framework_Services_Optional_TFileService_service
+  ROOT::Core ROOT::Tree ROOT::Hist
   ${ROOT_BASIC_LIB_LIST}
         ${ARTDAQ-CORE_UTILITIES}
   sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common 
@@ -142,11 +145,12 @@ simple_plugin( CrtCalAnalysis "module"
 )
 
 simple_plugin( AnaProducer "module"
-  art_Framework_Services_Registry
-  art_root_io_tfile_support
-  art_root_io_TFileService_service
-  #art_Framework_Services_Optional
-  #art_Framework_Services_Optional_TFileService_service
+  art::Framework_Services_Registry
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  #art::Framework_Services_Optional
+  #art::Framework_Services_Optional_TFileService_service
+  ROOT::Core ROOT::Tree ROOT::Hist
   ${ROOT_BASIC_LIB_LIST}
         ${ARTDAQ-CORE_UTILITIES}
   sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common 
@@ -158,26 +162,32 @@ simple_plugin( AnaProducer "module"
 )
 
 simple_plugin( CRTEventProducer "module"
-  art_Framework_Services_Registry
-  art_root_io_tfile_support
-  art_root_io_TFileService_service
-  #art_Framework_Services_Optional
-  #art_Framework_Services_Optional_TFileService_service
+  art::Framework_Services_Registry
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  #art::Framework_Services_Optional
+  #art::Framework_Services_Optional_TFileService_service
   #${ROOT_BASIC_LIB_LIST}
   CRT_PREPROCESS_TREE
   #CRT_CAL_TREE
-  sbnobj_Common_CRT
+  sbnobj::Common_CRT
+  lardata::headers
+  larcore::headers
+  larcorealg::headers
+  larcoreobj::headers
+  lardataalg::headers
 )
 
 simple_plugin( DecoderICARUSCRT "module"
-  art_Framework_Services_Registry
-  art_root_io_tfile_support
-  art_root_io_TFileService_service
+  art::Framework_Services_Registry
+  art_root_io::tfile_support
+  art_root_io::TFileService_service
+  ROOT::Core ROOT::Tree ROOT::Hist
   ${ROOT_BASIC_LIB_LIST}
   ${ARTDAQ-CORE_UTILITIES}
   sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common
   artdaq_core::artdaq-core_Data
-  sbnobj_Common_CRT
+  sbnobj::Common_CRT
 )
 
 install_fhicl()
diff --git a/icaruscode/CRT/CRTUtils/CMakeLists.txt b/icaruscode/CRT/CRTUtils/CMakeLists.txt
index 07e742f..02a7941 100644
--- a/icaruscode/CRT/CRTUtils/CMakeLists.txt
+++ b/icaruscode/CRT/CRTUtils/CMakeLists.txt
@@ -1,46 +1,46 @@
 if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
-cet_add_compiler_flags(CXX -Wno-maybe-uninitialized)
+	cet_add_compiler_flags(CXX -Wno-maybe-uninitialized)
 endif()
-art_make(    LIBRARY_NAME icaruscode_CRTUtils
-             LIB_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects  
-                           lardataalg_DetectorInfo
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           cetlib cetlib_except
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
-                           ${MF_MESSAGELOGGER}
-                           ${CLHEP}
-                           ${FHICLCPP}
-                           ${ROOT_GEOM}
-                           ${ROOT_XMLIO}
-                           ${ROOT_GDML}
-                           ${ROOT_GENVECTOR}
-                           ${ROOT_BASIC_LIB_LIST}
-                           ${Boost_SYSTEM_LIBRARY}
-                           icaruscode_CRT
-                           sbnobj_Common_CRT
-                           icaruscode_CRTData
-                           lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-                           nurandom_RandomUtils_NuRandomService_service
-        )
+art_make(LIBRARY_NAME icaruscode_CRTUtils
+	LIB_LIBRARIES larcorealg::Geometry
+	larcore::Geometry_Geometry_service
+	larsim::Simulation
+	lardataobj::Simulation
+	larsim::MCCheater_BackTrackerService_service
+	larsim::MCCheater_ParticleInventoryService_service
+	lardata::Utilities
+	larevt::Filters
+	lardataobj::RawData
+	lardataobj::RecoBase
+	lardata::RecoObjects
+	lardataalg::DetectorInfo
+	larpandora::LArPandoraInterface
+	nusimdata::SimulationBase
+	cetlib::cetlib cetlib_except::cetlib_except
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art_root_io::tfile_support ROOT::Core
+	art_root_io::TFileService_service
+	art::Framework_Services_Optional_RandomNumberGenerator_service
+	art::Persistency_Common
+	art::Persistency_Provenance
+	art::Utilities canvas::canvas
+	messagefacility::MF_MessageLogger
+	CLHEP::CLHEP
+	fhiclcpp::fhiclcpp
+	ROOT::Geom
+	ROOT::XMLIO
+	ROOT::Gdml
+	ROOT::GenVector
+	Boost::system
+	sbnobj::ICARUS_CRT
+	sbnobj::Common_CRT
+	lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+	nurandom::RandomUtils_NuRandomService_service
+	)
 
 install_headers()
 install_fhicl()
 install_source()
+
diff --git a/icaruscode/Decode/CMakeLists.txt b/icaruscode/Decode/CMakeLists.txt
index 4e6fb23..c34e823 100644
--- a/icaruscode/Decode/CMakeLists.txt
+++ b/icaruscode/Decode/CMakeLists.txt
@@ -1,83 +1,86 @@
+include_directories(${TRACE_INC})
+
 cet_enable_asserts()
 
-cet_find_library(LIBWDA NAMES wda PATHS ENV LIBWDA_LIB NO_DEFAULT_PATH)
+cet_find_library(LIBWDA NAMES wda PATHS ENV LIBWDA_LIB)
 
 art_make(
-          EXCLUDE
-                        PMTconfigurationExtraction_module.cc
-                        DumpPMTconfiguration_module.cc
-                        DumpArtDAQfragments_module.cc
-                        DaqDecoderICARUSPMT_module.cc
-          MODULE_LIBRARIES
-                        icarus_signal_processing
-                        icarus_signal_processing_Detection
-                        icarus_signal_processing_Filters
-                        sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_ICARUS 
-                        artdaq_core::artdaq-core_Utilities
-                        larcorealg_Geometry
-                        larcore_Geometry_Geometry_service
-                        lardata_Utilities
-                        larevt_Filters
-                        lardataobj_RawData
-                        lardata_ArtDataHelper
-                        ${ROOT_BASIC_LIB_LIST}
-                        LIBWDA
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        ${ART_UTILITIES}
-                        art_Persistency_Common canvas
-                        art_Persistency_Provenance canvas
-                        art_Utilities canvas
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        ${FHICLCPP}
-                        cetlib cetlib_except
-                        ${TBB}
-        )
+	EXCLUDE
+		PMTconfigurationExtraction_module.cc
+		DumpPMTconfiguration_module.cc
+		DumpArtDAQfragments_module.cc
+		DaqDecoderICARUSPMT_module.cc
+	MODULE_LIBRARIES
+	icarus_signal_processing::icarus_signal_processing
+	icarus_signal_processing::Detection
+	icarus_signal_processing::Filters
+	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_ICARUS
+	artdaq_core::artdaq-core_Utilities
+	larcorealg::Geometry
+	larcore::Geometry_Geometry_service
+	lardata::Utilities
+	larevt::Filters
+	lardataobj::RawData
+	lardata::ArtDataHelper
+	LIBWDA
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art_root_io::tfile_support
+	art_root_io::TFileService_service
+	art::Utilities
+	art::Persistency_Common canvas::canvas
+	art::Persistency_Provenance
+	art::Utilities
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	fhiclcpp::fhiclcpp
+	cetlib::cetlib cetlib_except::cetlib_except
+	${TBB}
+	)
 
 simple_plugin(DaqDecoderICARUSPMT module
-  sbnobj_Common_PMT_Data
-  icaruscode_Decode_DecoderTools_Dumpers
-  icaruscode_Decode_DataProducts # should become sbnobj_Common_Trigger
-  icaruscode_Decode_DecoderTools
-  sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common
-  sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays
-  lardataobj_RawData
-  artdaq_core::artdaq-core_Data
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${MF_MESSAGELOGGER}
-  ${FHICLCPP}
-  cetlib_except
-  ROOT::Tree
-  )
+	sbnobj::Common_PMT_Data
+	icaruscode::Decode_DecoderTools_Dumpers
+	icaruscode::Decode_DataProducts # should become sbnobj::Common_Trigger
+	icaruscode::Decode_DecoderTools
+	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_Common
+	sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays
+	lardataobj::RawData
+	larcore::Geometry_Geometry_service
+	artdaq_core::artdaq-core_Data
+	art_root_io::TFileService_service
+	art_root_io::tfile_support
+	art::Framework_Services_Registry
+	messagefacility::MF_MessageLogger
+	fhiclcpp::fhiclcpp
+	cetlib_except::cetlib_except
+	ROOT::Tree
+	lardata::Utilities
+	)
 
 simple_plugin(PMTconfigurationExtraction module
-  icaruscode_Decode_DecoderTools
-  sbnobj_Common_PMT_Data
-  art_Framework_Services_Registry
-  fhiclcpp
-  cetlib_except
-  )
+	icaruscode::Decode_DecoderTools
+	sbnobj::Common_PMT_Data
+	art::Framework_Services_Registry
+	fhiclcpp::fhiclcpp
+	cetlib_except::cetlib_except
+	)
 
 simple_plugin(DumpPMTconfiguration module
-  sbnobj_Common_PMT_Data
-  ${MF_MESSAGELOGGER}
-  fhiclcpp
-  cetlib_except
-  )
+	sbnobj::Common_PMT_Data
+	messagefacility::MF_MessageLogger
+	fhiclcpp::fhiclcpp
+	cetlib_except::cetlib_except
+	)
 
 simple_plugin(DumpArtDAQfragments module
-  icaruscode_Decode_DecoderTools_Dumpers
-  artdaq_core::artdaq-core_Data
-  ${MF_MESSAGELOGGER}
-  fhiclcpp
-  cetlib_except
-  )
+	icaruscode::Decode_DecoderTools_Dumpers
+	artdaq_core::artdaq-core_Data
+	messagefacility::MF_MessageLogger
+	fhiclcpp::fhiclcpp
+	cetlib_except::cetlib_except
+	)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/Decode/ChannelMapping/CMakeLists.txt b/icaruscode/Decode/ChannelMapping/CMakeLists.txt
index 9361eea..d0a2785 100644
--- a/icaruscode/Decode/ChannelMapping/CMakeLists.txt
+++ b/icaruscode/Decode/ChannelMapping/CMakeLists.txt
@@ -1,67 +1,74 @@
 cet_enable_asserts()
 
+include_directories($ENV{LIBWDA_DIR}/inc)
+link_directories($ENV{LIBWDA_DIR}/lib)
+
 art_make(
-          EXCLUDE "PMTChannelMapDumper.cxx"
-          LIB_LIBRARIES
-                        larevt_CalibrationDBI_IOVData
-                        art_Utilities
-                        canvas
-                        ${FHICLCPP}
-                        ${MF_MESSAGELOGGER}
-                        cetlib_except
-                        cetlib
-          SERVICE_LIBRARIES
-                        icaruscode_Decode_ChannelMapping
-                        lardata_Utilities
-                        lardata_ArtDataHelper
-                        larevt_CalibrationDBI_IOVData
-                        ${ROOT_BASIC_LIB_LIST}
-                        LIBWDA
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        ${ART_UTILITIES}
-                        art_Persistency_Common canvas
-                        art_Persistency_Provenance canvas
-                        art_Utilities canvas
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        ${FHICLCPP}
-                        cetlib cetlib_except
-          TOOL_LIBRARIES
-                        larevt_CalibrationDBI_IOVData
-                        larevt_CalibrationDBI_Providers
-                        lardata_Utilities
-                        lardata_ArtDataHelper
-                        ${ROOT_BASIC_LIB_LIST}
-                        LIBWDA
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        ${ART_UTILITIES}
-                        art_Persistency_Common canvas
-                        art_Persistency_Provenance canvas
-                        art_Utilities canvas
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        ${FHICLCPP}
-                        cetlib cetlib_except
-                        SQLite::SQLite3
-        )
+	EXCLUDE "PMTChannelMapDumper.cxx"
+	LIB_LIBRARIES
+		art::Utilities
+		canvas::canvas
+		fhiclcpp::fhiclcpp
+		messagefacility::MF_MessageLogger
+		cetlib_except::cetlib_except
+		cetlib::cetlib
+                larcorealg::CoreUtils
+	SERVICE_LIBRARIES
+		icaruscode::Decode_ChannelMapping
+		lardata::Utilities
+		lardata::ArtDataHelper
+                larcorealg::CoreUtils
+		wda::wda
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support
+		art_root_io::TFileService_service
+		art::Utilities
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		${TBB}
+                larevt::CalibrationDBI_IOVData
+                larevt::CalibrationDBI_Providers
+	TOOL_LIBRARIES
+                larcorealg::CoreUtils
+		lardata::Utilities
+		lardata::ArtDataHelper
+		wda::wda
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support
+		art_root_io::TFileService_service
+		art::Utilities
+		art::Persistency_Common canvas::canvas
+		art::Persistency_Provenance
+		art::Utilities
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		SQLite::SQLite3
+		${TBB}
+                larevt::CalibrationDBI_IOVData
+                larevt::CalibrationDBI_Providers
+	)
 
 art_make_exec(NAME "PMTChannelMapDumper"
-  LIBRARIES
-    icaruscode_Decode_ChannelMapping
-    ${MF_MESSAGELOGGER}
-    ${FHICLCPP}
-    cetlib
-    cetlib_except
-    Boost::filesystem
-  )
+	LIBRARIES
+		icaruscode::Decode_ChannelMapping
+                larevt::CalibrationDBI_IOVData
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		Boost::filesystem
+	)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/Decode/DataProducts/CMakeLists.txt b/icaruscode/Decode/DataProducts/CMakeLists.txt
index ab30dea..1afc573 100644
--- a/icaruscode/Decode/DataProducts/CMakeLists.txt
+++ b/icaruscode/Decode/DataProducts/CMakeLists.txt
@@ -1,8 +1,8 @@
-cet_make( 
-  NO_DICTIONARY
-  )
+cet_make(
+NO_DICTIONARY
+)
 
-art_dictionary(DICTIONARY_LIBRARIES icaruscode_Decode_DataProducts)
+art_dictionary(DICTIONARY_LIBRARIES icaruscode::Decode_DataProducts)
 
 install_headers()
 install_source()
diff --git a/icaruscode/Decode/DecoderTools/CMakeLists.txt b/icaruscode/Decode/DecoderTools/CMakeLists.txt
index 791ef8a..6e96f3d 100644
--- a/icaruscode/Decode/DecoderTools/CMakeLists.txt
+++ b/icaruscode/Decode/DecoderTools/CMakeLists.txt
@@ -1,53 +1,56 @@
 cet_enable_asserts()
 
-##include_directories($ENV{LIBWDA_FQ_DIR}/include)
+include_directories($ENV{LIBWDA_DIR}/inc)
+link_directories($ENV{LIBWDA_DIR}/lib)
+include_directories(${FFTW3_INCLUDE_DIRS})
 
 add_subdirectory("Dumpers")
 
-art_make( SUBDIRS details
-          LIB_LIBRARIES
-                        icaruscode_Utilities
-                        sbnobj_Common_PMT_Data
-                        canvas
-                        ${MF_MESSAGELOGGER}
-                        ${FHICLCPP}
-                        cetlib_except
-                        cetlib
-                        ROOT::RIO
-                        ROOT::Core
-          TOOL_LIBRARIES
-                        sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_ICARUS 
-                        artdaq_core::artdaq-core_Utilities
-                        icarus_signal_processing
-                        icarus_signal_processing_Detection
-                        icarus_signal_processing_Filters
-                        icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                        icaruscode_Decode_DecoderTools
-                        icaruscode_Decode_DecoderTools_Dumpers
-                        icaruscode_Utilities
-                        larcorealg_Geometry
-                        larcore_Geometry_Geometry_service
-                        lardata_Utilities
-                        lardataalg_DetectorInfo
-                        larevt_Filters
-                        lardataobj_RawData
-                        lardata_ArtDataHelper
-                        ${ROOT_BASIC_LIB_LIST}
-                        LIBWDA
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        ${ART_UTILITIES}
-                        art_Persistency_Common canvas
-                        art_Persistency_Provenance canvas
-                        art_Utilities canvas
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        ${FHICLCPP}
-                        cetlib cetlib_except
-        )
+art_make(SUBDIRS details
+	LIB_LIBRARIES
+                lardataalg::DetectorInfo
+		icaruscode::Utilities
+		sbnobj::Common_PMT_Data
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		cetlib::cetlib
+		ROOT::RIO
+		ROOT::Core
+		art::Framework_Services_Registry
+	TOOL_LIBRARIES
+		sbndaq_artdaq_core::sbndaq-artdaq-core_Overlays_ICARUS
+		artdaq_core::artdaq-core_Utilities
+		icarus_signal_processing::icarus_signal_processing
+		icarus_signal_processing::Detection
+		icarus_signal_processing::Filters
+		icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+		icaruscode::Decode_DecoderTools
+		icaruscode::Decode_DecoderTools_Dumpers
+		icaruscode::Utilities
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		lardata::Utilities
+		lardataalg::DetectorInfo
+		larevt::Filters
+		lardataobj::RawData
+		lardata::ArtDataHelper
+		ROOT::Core
+                wda
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support
+		art_root_io::TFileService_service
+		art::Utilities
+		art::Persistency_Common canvas::canvas
+		art::Persistency_Provenance
+		art::Utilities
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+	)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/Decode/DecoderTools/Dumpers/CMakeLists.txt b/icaruscode/Decode/DecoderTools/Dumpers/CMakeLists.txt
index 7adf306..3ddacad 100644
--- a/icaruscode/Decode/DecoderTools/Dumpers/CMakeLists.txt
+++ b/icaruscode/Decode/DecoderTools/Dumpers/CMakeLists.txt
@@ -1,7 +1,8 @@
 art_make_library(
-  SOURCE
-    "FragmentDumper.cxx"
-  LIBRARIES
-    artdaq_core::artdaq-core_Data
-    ${CETLIB_EXCEPT}
-  )
+	SOURCE
+		"FragmentDumper.cxx"
+	LIBRARIES
+		artdaq_core::artdaq-core_Data
+		cetlib_except::cetlib_except
+                icarusalg::Utilities
+	)
diff --git a/icaruscode/Filters/CMakeLists.txt b/icaruscode/Filters/CMakeLists.txt
index d7c31a8..87d9ac5 100644
--- a/icaruscode/Filters/CMakeLists.txt
+++ b/icaruscode/Filters/CMakeLists.txt
@@ -1,39 +1,38 @@
-art_make( 
-          MODULE_LIBRARIES
-                        icarusalg_Utilities
-                        larcorealg_Geometry
-                        larcore_Geometry_Geometry_service
-                        larsim_Simulation 
-                        nug4_ParticleNavigation
-                        lardataobj_Simulation
-                        lardata_Utilities
-                        larevt_Filters
-                        lardataalg_MCDumpers
-                        lardataobj_RawData
-                        lardataobj_RecoBase
-                        lardata_RecoObjects
-                        nusimdata_SimulationBase
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ROOT_CORE}
-                        art_Persistency_Common 
-                        art_Persistency_Provenance 
-                        art_Utilities 
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        ${FHICLCPP}
-                        ${CETLIB}
-                        ${CETLIB_EXCEPT}
-                        ROOT::EG
-                        ${ROOT_GEOM}
-                        ${ROOT_XMLIO}
-                        ${ROOT_GDML}
-                        ${ROOT_GENVECTOR}
-                        ${ROOT_BASIC_LIB_LIST}
-        )
+art_make(
+	MODULE_LIBRARIES
+		icarusalg::Utilities
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		larsim::Simulation
+		nug4::ParticleNavigation
+		lardataobj::Simulation
+		lardata::Utilities
+		larevt::Filters
+		lardataalg::MCDumpers
+		lardataobj::RawData
+		lardataobj::RecoBase
+		lardata::RecoObjects
+		nusimdata::SimulationBase
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		ROOT::Core
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		ROOT::EG
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+		ROOT::GenVector
+	)
 
-# install_headers()
+#install_headers()
 install_fhicl()
 install_source()
 
diff --git a/icaruscode/Generators/CMakeLists.txt b/icaruscode/Generators/CMakeLists.txt
index 9f0fae6..26ad26b 100644
--- a/icaruscode/Generators/CMakeLists.txt
+++ b/icaruscode/Generators/CMakeLists.txt
@@ -1,97 +1,108 @@
-find_ups_product(ifdhc)
+#find_ups_product(ifdhc)
 #include_directories( $ENV{IFDHC_FQ_DIR}/inc )
 #set( IFDH_AS_SERVICE_LIB_LIST
 #     art_Framework_Services_Registry
 #     ${Boost_SYSTEM_LIBRARY}
 #     ${IFDH_SERVICE} )
 #include_directories ( . )
-art_make(
-      LIBRARY_NAME     
-                  icaruscode_hepmc
-      LIB_LIBRARIES
-                  larcorealg_Geometry
-                  larcore_Geometry_Geometry_service
-                  lardataobj_RecoBase
-                  lardataobj_AnalysisBase 
-                  lardataobj_RawData
-                  lardata_RecoObjects 
-                  lardata_Utilities
-                  lardataobj_Simulation
-                  nusimdata_SimulationBase
-                  larcoreobj_SummaryData
-                  lardataobj_RawData
-                  lardataobj_RecoBase
-                  lardataobj_AnalysisBase
-                  ${ART_FRAMEWORK_CORE}
-                  ${ART_FRAMEWORK_BASIC}
-                  ${ART_FRAMEWORK_IO_PRODUCTMIX}
-                  ${ART_FRAMEWORK_IO_ROOT}
-                  ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                  ${ART_FRAMEWORK_MODULES}
-                  ${ART_FRAMEWORK_PRINCIPAL}
-                  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                  ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-                  ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-                  ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-                  ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                  art_Persistency_Provenance
-                  art_Persistency_Common
-                  art_Utilities
-                  canvas
-                  ${MF_MESSAGELOGGER}
-                  ${MF_UTILITIES}
-                  #${BOOST_LIB}
-                  #${Boost_SYSTEM_LIBRARY}
-                  #${Boost_FILESYSTEM_LIBRARY}
-                  ${FHICLCPP}
-                  ${CETLIB}
-                  cetlib cetlib_except
-                  ${ROOT_BASIC_LIB_LIST}
-                  
-      MODULE_LIBRARIES
-                  larcorealg_Geometry
-                  larcore_Geometry_Geometry_service
-                  lardataobj_RecoBase
-                  lardataobj_AnalysisBase 
-                  lardataobj_RawData
-                  lardata_RecoObjects 
-                  lardata_Utilities
-                  lardataobj_Simulation
-                  nusimdata_SimulationBase
-                  larcoreobj_SummaryData
-                  lardataobj_RawData    
-                  lardataobj_RecoBase
-                  lardataobj_AnalysisBase
-                  IFDH_service
-                  ${ART_FRAMEWORK_CORE}
-                  ${ART_FRAMEWORK_BASIC}
-                  ${ART_FRAMEWORK_IO_PRODUCTMIX}
-                  ${ART_FRAMEWORK_IO_ROOT}
-                  ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                  ${ART_FRAMEWORK_MODULES}
-                  ${ART_FRAMEWORK_PRINCIPAL}
-                  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                  ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-                  ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-                  ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-                  ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                  art_Persistency_Provenance
-                  art_Persistency_Common
-                  art_Utilities
-                  canvas
-                  ifdh
-                  ${MF_MESSAGELOGGER}
-                  ${MF_UTILITIES}
-                  #${BOOST_LIB}
-                  #${Boost_SYSTEM_LIBRARY}
-                  #${Boost_FILESYSTEM_LIBRARY}
-                  ${FHICLCPP}
-                  ${CETLIB}
-                  cetlib cetlib_except
-                  ${ROOT_BASIC_LIB_LIST}
-)     
+#art_make(
+#      LIBRARY_NAME     
+#                  icaruscode_hepmc
+#      LIB_LIBRARIES
+#                  larcorealg::Geometry
+#                  larcore::Geometry_Geometry_service
+#                  lardataobj::RecoBase
+#                  lardataobj::AnalysisBase 
+#                  lardataobj::RawData
+#                  lardata::RecoObjects 
+#                  lardata::Utilities
+#                  lardataobj::Simulation
+#                  nusimdata::SimulationBase
+#                  larcoreobj::SummaryData
+#                  lardataobj::RawData
+#                  lardataobj::RecoBase
+#                  lardataobj::AnalysisBase
+#                  ifdh_art::IFDH_service
+#                  ${ART_FRAMEWORK_CORE}
+#                  ${ART_FRAMEWORK_BASIC}
+#                  ${ART_FRAMEWORK_IO_PRODUCTMIX}
+#                  ${ART_FRAMEWORK_IO_ROOT}
+#                  ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
+#                  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
+#                  ${ART_FRAMEWORK_MODULES}
+#                  ${ART_FRAMEWORK_PRINCIPAL}
+#                  ${ART_FRAMEWORK_SERVICES_REGISTRY}
+#                  ${ART_FRAMEWORK_SERVICES_OPTIONAL}
+#                  ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
+#                  ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
+#                  ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
+#                  art::Persistency_Provenance
+#                  art::Persistency_Common
+#                  art::Utilities
+#                  canvas::canvas
+#                  ${MF_MESSAGELOGGER}
+#                  ${MF_UTILITIES}
+#                  #${BOOST_LIB}
+#                  #${Boost_SYSTEM_LIBRARY}
+#                  #${Boost_FILESYSTEM_LIBRARY}
+#                  ${FHICLCPP}
+#                  ${CETLIB}
+#                  cetlib::cetlib cetlib_except::cetlib_except
+#                  ${ROOT_BASIC_LIB_LIST}
+#                  ROOT::Core
+#                  
+#      MODULE_LIBRARIES
+#                  larcorealg::Geometry
+#                  larcore::Geometry_Geometry_service
+#                  lardataobj::RecoBase
+#                  lardataobj::AnalysisBase 
+#                  lardataobj::RawData
+#                  lardata::RecoObjects 
+#                  lardata::Utilities
+#                  lardataobj::Simulation
+#                  nusimdata::SimulationBase
+#                  larcoreobj::SummaryData
+#                  lardataobj::RawData    
+#                  lardataobj::RecoBase
+#                  lardataobj::AnalysisBase
+#                  ifdh_art::IFDH_service
+#                  ${ART_FRAMEWORK_CORE}
+#                  ${ART_FRAMEWORK_BASIC}
+#                  ${ART_FRAMEWORK_IO_PRODUCTMIX}
+#                  ${ART_FRAMEWORK_IO_ROOT}
+#                  ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
+#                  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
+#                  ${ART_FRAMEWORK_MODULES}
+#                  ${ART_FRAMEWORK_PRINCIPAL}
+#                  ${ART_FRAMEWORK_SERVICES_REGISTRY}
+#                  ${ART_FRAMEWORK_SERVICES_OPTIONAL}
+#                  ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
+#                  ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
+#                  ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
+#                  art::Persistency_Provenance
+#                  art::Persistency_Common
+#                  art::Utilities
+#                  canvas::canvas
+#                  ${MF_MESSAGELOGGER}
+#                  ${MF_UTILITIES}
+#                  #${BOOST_LIB}
+#                  #${Boost_SYSTEM_LIBRARY}
+#                  #${Boost_FILESYSTEM_LIBRARY}
+#                  ${FHICLCPP}
+#                  ${CETLIB}
+#                  cetlib::cetlib cetlib_except::cetlib_except
+#                  ${ROOT_BASIC_LIB_LIST}
+#                  ROOT::Core ROOT::Physics
+#)
+ cet_build_plugin(HepMCFileGen art::module LIBRARIES larcorealg::Geometry
+  larcore::Geometry_Geometry_service lardataobj::RecoBase
+  lardataobj::AnalysisBase lardataobj::RawData lardata::RecoObjects
+  lardata::Utilities lardataobj::Simulation nusimdata::SimulationBase
+  larcoreobj::SummaryData lardataobj::RawData lardataobj::RecoBase
+  lardataobj::AnalysisBase ifdh_art::IFDH_service art::Persistency_Provenance
+  art::Persistency_Common art::Utilities canvas::canvas cetlib::cetlib
+  cetlib_except::cetlib_except ROOT::Core ROOT::Physics SOURCE HepMCFileGen_module.cc )
+     
 install_headers()
 install_source()
 install_fhicl()
diff --git a/icaruscode/Generators/HepMCFileGen_module.cc b/icaruscode/Generators/HepMCFileGen_module.cc
index 00209b2..3e7eeaa 100644
--- a/icaruscode/Generators/HepMCFileGen_module.cc
+++ b/icaruscode/Generators/HepMCFileGen_module.cc
@@ -92,8 +92,8 @@
 #include "nusimdata/SimulationBase/MCTruth.h"
 #include "nusimdata/SimulationBase/MCParticle.h"
 #include "ifdh.h"
-//#include "ifdh_art/IFDHService/IFDH_service.h" // ifdh_ns::IFDH
-#include "IFDH_service.h" // ifdh_ns::IFDH
+#include "ifdh_art/IFDHService/IFDH_service.h" // ifdh_ns::IFDH
+//#include "IFDH_service.h" // ifdh_ns::IFDH
 #undef USE_IFDH_SERVICE // ifdh for now
 
 namespace evgen {
diff --git a/icaruscode/Geometry/CMakeLists.txt b/icaruscode/Geometry/CMakeLists.txt
index 449df28..b651ee0 100644
--- a/icaruscode/Geometry/CMakeLists.txt
+++ b/icaruscode/Geometry/CMakeLists.txt
@@ -1,28 +1,30 @@
 
 art_make(
-  SERVICE_LIBRARIES
-      icarusalg_Geometry
-      larcorealg_Geometry
-      ${ART_UTILITIES}
-      ${MF_MESSAGELOGGER}
-      ${FHICLCPP}
-      ${CETLIB}
-      ${CETLIB_EXCEPT}
-      ${ROOT_GEOM}
-      ${ROOT_XMLIO}
-      ${ROOT_GDML}
-      ${ROOT_BASIC_LIB_LIST}
-  TOOL_LIBRARIES
-      icarusalg_Geometry
-      larcorealg_Geometry
-      ${ART_UTILITIES}
-      ${MF_UTILITIES}
-      ${FHICLCPP}
-      ${CETLIB}
-      ${CETLIB_EXCEPT}
-      ${ROOT_GEOM}
-      ${ROOT_XMLIO}
-      ${ROOT_GDML}
-      ${ROOT_BASIC_LIB_LIST}    
-  )
+	SERVICE_LIBRARIES
+		icarusalg::Geometry
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		art::Utilities
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+
+	TOOL_LIBRARIES
+		icarusalg::Geometry
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		art::Utilities
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+
+	)
 
diff --git a/icaruscode/IcarusObj/CMakeLists.txt b/icaruscode/IcarusObj/CMakeLists.txt
index c08e0a9..29003c3 100644
--- a/icaruscode/IcarusObj/CMakeLists.txt
+++ b/icaruscode/IcarusObj/CMakeLists.txt
@@ -1,4 +1,4 @@
-art_dictionary()
+art_dictionary(DICTIONARY_LIBRARIES lardataalg::headers larcorealg::headers lardataobj::headers sbnobj::ICARUS_PMT_Data)
 
 install_headers()
 install_source()
diff --git a/icaruscode/PMT/Algorithms/CMakeLists.txt b/icaruscode/PMT/Algorithms/CMakeLists.txt
index a7b424a..f531eae 100644
--- a/icaruscode/PMT/Algorithms/CMakeLists.txt
+++ b/icaruscode/PMT/Algorithms/CMakeLists.txt
@@ -1,28 +1,24 @@
-# Leave this out for the time being. One day the grid will be updated enough...
-# cet_set_compiler_flags(EXTRA_CXX_FLAGS -mavx)
+#Leave this out for the time being. One day the grid will be updated enough ...
+#cet_set_compiler_flags(EXTRA_CXX_FLAGS -mavx)
+
+include_directories(${CPPGSL_INC})
 
 art_make(
-  LIB_LIBRARIES 
-    larcorealg_Geometry
-    lardataobj_RawData
-    icarusalg_Utilities
-#    lardataobj_RecoBase
-#    lardata_Utilities
-#    larcorealg_Geometry
-#    lardata_ArtDataHelper
-#    nusimdata_SimulationBase
-     canvas
-     ${MF_MESSAGELOGGER}
-     ${MF_UTILITIES}
-     ${FHICLCPP}
-     ${CETLIB}
-     cetlib_except
-     ${ROOT_FFTW}
-     ${ROOT_GENVECTOR}
-     ${ROOT_BASIC_LIB_LIST}
-     ${CLHEP}
-#    ${Boost_SYSTEM_LIBRARY}
-  )
+	LIB_LIBRARIES
+		larcorealg::Geometry
+		lardataobj::RawData
+		icarusalg::Utilities
+                lardataalg::DetectorInfo
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		ROOT::FFTW
+		ROOT::GenVector
+		CLHEP::Random
+	)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/PMT/CMakeLists.txt b/icaruscode/PMT/CMakeLists.txt
index 32c19af..15969c6 100644
--- a/icaruscode/PMT/CMakeLists.txt
+++ b/icaruscode/PMT/CMakeLists.txt
@@ -7,136 +7,91 @@ add_subdirectory(Trigger)
 # Removing AVX instructions because assuming the grid nodes
 # being less than 6 year old proved to be pretentious.
 # AVX is not so relevant after the last commit anyway
-# cet_set_compiler_flags(EXTRA_CXX_FLAGS -mavx)
+# cet_set_compiler_flags(EXTRA_CXX_FLAGS-mavx)
+
+include_directories(${CPPGSL_INC})
 
 simple_plugin(SimPMTIcarus "module"
-  icaruscode_PMT_Algorithms
-  lardataobj_RawData
-  lardataobj_Simulation
-  nurandom_RandomUtils_NuRandomService_service
-  ${ART_FRAMEWORK_CORE}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  art_Persistency_Provenance
-  ${CANVAS}
-  ${MF_MESSAGELOGGER}
-  ${FHICLCPP}
-  ${CETLIB}
-  cetlib_except
-  ${ROOT_BASIC_LIB_LIST}
-  ${Boost_SYSTEM_LIBRARY}
-  )
+			icaruscode::PMT_Algorithms
+			lardataobj::RawData
+			lardataobj::Simulation
+                        larcore::Geometry_Geometry_service
+                        lardata::Utilities
+			nurandom::RandomUtils_NuRandomService_service
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art::Framework_Services_Optional_RandomNumberGenerator_service
+			art_root_io::TFileService_service
+			art_root_io::tfile_support
+			art::Persistency_Provenance
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			cetlib_except::cetlib_except
+			Boost::system
+			)
 
-simple_plugin(OpDetWaveformMetaMaker module
-  icaruscode_PMT_Algorithms
-  lardataalg_DetectorInfo
-  lardataobj_RawData
+simple_plugin(OpDetWaveformMetaMaker "module"
+  icaruscode::PMT_Algorithms
+  lardataalg::DetectorInfo
+  lardataobj::RawData
+  lardata::Utilities
+  larcore::Geometry_Geometry_service
   )
 
 simple_plugin(PMTWaveformBaselines "module"
-  icaruscode_PMT_Algorithms
-  sbnobj_ICARUS_PMT_Data
-  larcore_Geometry_Geometry_service
-  larcorealg_Geometry
-  lardataobj_RawData
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${MF_MESSAGELOGGER}
-  ROOT::Hist
-  ROOT::Core
-  )
+			icaruscode::PMT_Algorithms
+			sbnobj::ICARUS_PMT_Data
+			larcore::Geometry_Geometry_service
+			larcorealg::Geometry
+			lardataobj::RawData
+                        lardata::Utilities
+			art_root_io::TFileService_service
+			art_root_io::tfile_support
+			art::Framework_Services_Registry
+			messagefacility::MF_MessageLogger
+			ROOT::Hist
+			ROOT::Core
+			)
 
 simple_plugin(PMTWaveformBaselinesFromReadoutConfiguration "module"
-  sbnobj_ICARUS_PMT_Data
-  sbnobj_Common_PMT_Data
-  larcore_Geometry_Geometry_service
-  larcorealg_Geometry
-  lardataobj_RawData
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${MF_MESSAGELOGGER}
-  ROOT::Hist
-  ROOT::Core
-  )
+			sbnobj::ICARUS_PMT_Data
+			sbnobj::Common_PMT_Data
+			larcore::Geometry_Geometry_service
+			larcorealg::Geometry
+			lardataobj::RawData
+                        lardata::Utilities
+			art_root_io::TFileService_service
+			art_root_io::tfile_support
+			art::Framework_Services_Registry
+			messagefacility::MF_MessageLogger
+			ROOT::Hist
+			ROOT::Core
+			)
 
 
 simple_plugin(AsymGaussPulseFunctionTool "tool"
-  icaruscode_PMT_Algorithms
-  )
+	icaruscode::PMT_Algorithms
+	)
 
 simple_plugin(AsymExpPulseFunctionTool "tool"
-  icaruscode_PMT_Algorithms
-  )
+	icaruscode::PMT_Algorithms
+	)
 
 simple_plugin(CustomPulseFunctionTool "tool"
-  icaruscode_PMT_Algorithms
-  ROOT::Hist
-  )
-
-
-art_make(
-  EXCLUDE
-    "SimPMTIcarus_module.cc"
-    "OpDetWaveformMetaMaker_module.cc"
-    "PMTWaveformBaselines_module.cc"
-    "PMTWaveformBaselinesFromReadoutConfiguration_module.cc"
-    "AsymGaussPulseFunctionTool_tool.cc"
-    "AsymExpPulseFunctionTool_tool.cc"
-    "CustomPulseFunctionTool_tool.cc"
-          LIB_LIBRARIES 
-            lardataobj_RawData
-            lardataobj_RecoBase
-            lardata_Utilities
-            ${FHICLCPP}
-			${CETLIB}
-			${ROOT_BASIC_LIB_LIST}
-			${Boost_SYSTEM_LIBRARY}
-	        MODULE_LIBRARIES larcorealg_Geometry
-	  		larcore_Geometry_Geometry_service
-	        lardata_Utilities
-			larevt_Filters
-			lardataobj_RawData
-			larevt_CalibrationDBI_IOVData
-			larevt_CalibrationDBI_Providers
-			lardataobj_RecoBase
-			lardata_ArtDataHelper
-			nusimdata_SimulationBase
-            nurandom_RandomUtils_NuRandomService_service
-			${CLHEP}
-            ${ART_FRAMEWORK_CORE}
-			${ART_FRAMEWORK_PRINCIPAL}
-			${ART_FRAMEWORK_SERVICES_REGISTRY}
-			${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-			${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			art_Persistency_Common
-			art_Persistency_Provenance
-			art_Utilities
-			canvas
-			${MF_MESSAGELOGGER}
-			${MF_UTILITIES}
-	        ${FHICLCPP}
-			${CETLIB}
-			cetlib_except
-            ${ROOT_GEOM}
-            ${ROOT_XMLIO}
-            ${ROOT_GDML}
-			${ROOT_FFTW}
-			${ROOT_BASIC_LIB_LIST}
-			${Boost_SYSTEM_LIBRARY}
-        )
+	icaruscode::PMT_Algorithms
+	ROOT::Hist
+	)
 
 install_headers()
 install_fhicl()
 install_source()
 install_scripts(
-  SUBDIRS scripts
-  EXTRAS
-    "scripts/MergePhotonLibrary.C"
-    "scripts/RecompressROOTtrees.C"
-  )
+	SUBDIRS scripts
+	EXTRAS
+		"scripts/MergePhotonLibrary.C"
+		"scripts/RecompressROOTtrees.C"
+	)
 
diff --git a/icaruscode/PMT/LibraryMappingTools/CMakeLists.txt b/icaruscode/PMT/LibraryMappingTools/CMakeLists.txt
index 0382f83..6ff423a 100644
--- a/icaruscode/PMT/LibraryMappingTools/CMakeLists.txt
+++ b/icaruscode/PMT/LibraryMappingTools/CMakeLists.txt
@@ -1,25 +1,25 @@
 art_make_library(
-  SOURCE
-    "ICARUSPhotonMappingTransformations.cxx"
-  LIBRARIES
-    larsim_PhotonPropagation_LibraryMappingTools
-    larcore_Geometry_Geometry_service
-    larcorealg_Geometry
-    ${ART_FRAMEWORK_SERVICES_REGISTRY}
-    ${ART_UTILITIES}
-    ${CANVAS}
-    ${CETLIB_EXCEPT}
-    ${MF_MESSAGELOGGER}
-    ${FHICLCPP}
-    ${ROOT_GENVECTOR}
-    ${ROOT_BASIC_LIB_LIST}
-    ${Boost_SYSTEM_LIBRARY}
-  )
+		SOURCE
+			"ICARUSPhotonMappingTransformations.cxx"
+		LIBRARIES
+			larsim::PhotonPropagation_LibraryMappingTools
+			larcore::Geometry_Geometry_service
+			larcorealg::Geometry
+                        lardataalg::DetectorInfo
+			art::Framework_Services_Registry
+			art::Utilities
+			canvas::canvas
+			cetlib_except::cetlib_except
+			messagefacility::MF_MessageLogger
+			fhiclcpp::fhiclcpp
+			ROOT::GenVector
+			Boost::system
+		)
 
 simple_plugin(ICARUSPhotonMappingTransformations "tool"
-  icaruscode_PMT_LibraryMappingTools
-  larsim_PhotonPropagation_LibraryMappingTools
-  )
+		icaruscode::PMT_LibraryMappingTools
+		larsim::PhotonPropagation_LibraryMappingTools
+		)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/PMT/OpReco/CMakeLists.txt b/icaruscode/PMT/OpReco/CMakeLists.txt
index 2b4e76e..72246c7 100644
--- a/icaruscode/PMT/OpReco/CMakeLists.txt
+++ b/icaruscode/PMT/OpReco/CMakeLists.txt
@@ -1,35 +1,36 @@
 
 art_make(
-	  MODULE_LIBRARIES larcorealg_Geometry
-	  		larcore_Geometry_Geometry_service
-			lardataobj_RecoBase
-			lardataobj_Simulation
-			larcoreobj_SummaryData
-			larana_OpticalDetector_OpHitFinder
-			nusimdata_SimulationBase
-			nurandom_RandomUtils_NuRandomService_service
-			larsim_PhotonPropagation_PhotonVisibilityService_service
-            ${ART_FRAMEWORK_CORE}
-			${ART_FRAMEWORK_PRINCIPAL}
-			${ART_FRAMEWORK_SERVICES_REGISTRY}
-			${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-			${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			art_Persistency_Common
-			art_Persistency_Provenance
-			art_Utilities
-			canvas
-			${MF_MESSAGELOGGER}
-			${MF_UTILITIES}
-	        ${FHICLCPP}
-			${CETLIB}
-			${CLHEP}
-            ${ROOT_GEOM}
-            ${ROOT_XMLIO}
-            ${ROOT_GDML}
-			${ROOT_FFTW}
-			${ROOT_BASIC_LIB_LIST}
-
-        )
+	MODULE_LIBRARIES larcorealg::Geometry
+			larcore::Geometry_Geometry_service
+			lardataobj::RecoBase
+			lardataobj::Simulation
+			larcoreobj::SummaryData
+			larana::OpticalDetector_OpHitFinder
+                        larreco::Calorimetry
+                        lardata::Utilities
+			nusimdata::SimulationBase
+			nurandom::RandomUtils_NuRandomService_service
+			larsim::PhotonPropagation_PhotonVisibilityService_service
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art_root_io::tfile_support
+			art_root_io::TFileService_service
+			art::Persistency_Common
+			art::Persistency_Provenance
+			art::Utilities
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			CLHEP::Random
+			ROOT::Geom
+			ROOT::XMLIO
+			ROOT::Gdml
+			ROOT::FFTW
+			ROOT::Core
+)
 
 install_headers()
 install_source()
diff --git a/icaruscode/PMT/OpReco/FlashFinder/CMakeLists.txt b/icaruscode/PMT/OpReco/FlashFinder/CMakeLists.txt
index 8367efd..bc95c90 100644
--- a/icaruscode/PMT/OpReco/FlashFinder/CMakeLists.txt
+++ b/icaruscode/PMT/OpReco/FlashFinder/CMakeLists.txt
@@ -1,60 +1,61 @@
-include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
+include_directories(${CMAKE_CURRENT_SOURCE_DIR})
 
-art_make( 
-	  LIB_LIBRARIES
-		   icarusalg_Geometry
-		   larcore_Geometry_Geometry_service
-		   larcorealg_Geometry
-		   lardataobj_RecoBase
-		   ${LARDATA_LIB}
-		   canvas
-		   cetlib
-		   cetlib_except
-		   ${ART_FRAMEWORK_ART}
-		   ${ART_FRAMEWORK_CORE}
-		   ${ART_FRAMEWORK_PRINCIPAL}
-		   ${ART_FRAMEWORK_UTILITIES}
-                   ${ART_FRAMEWORK_BASIC}
-		   ${ART_FRAMEWORK_SERVICES_REGISTRY}
-		   ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-		   ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-		   art_Persistency_Common
-		   art_Persistency_Provenance
-		   art_Utilities
-		   ${MF_MESSAGELOGGER}
-		   ${FHICLCPP}
-		   ${ROOT_GEOM}
-		   ${ROOT_XMLIO}
-		   ${ROOT_GDML}
-		   ${ROOT_BASIC_LIB_LIST}
-          MODULE_LIBRARIES
-		   icaruscode_PMT_OpReco_FlashFinder
-		   icarusalg_Geometry
-		   larcore_Geometry_Geometry_service
-		   larcorealg_Geometry
-		   lardataobj_RecoBase
-		   ${LARDATA_LIB}
-		   canvas
-		   cetlib
-		   cetlib_except
-		   ${ART_FRAMEWORK_ART}
-		   ${ART_FRAMEWORK_CORE}
-		   ${ART_FRAMEWORK_PRINCIPAL}
-                   ${ART_FRAMEWORK_BASIC}
-		   ${ART_FRAMEWORK_SERVICES_REGISTRY}
-		   ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-		   ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-		   art_Persistency_Common
-		   art_Persistency_Provenance
-		   art_Utilities
-		   ${MF_MESSAGELOGGER}
-		   ${FHICLCPP}
-		   ${ROOT_GEOM}
-		   ${ROOT_XMLIO}
-		   ${ROOT_GDML}
-		   ${ROOT_BASIC_LIB_LIST}
-
-        )							   
+art_make(
+	LIB_LIBRARIES
+		icarusalg::Geometry
+		larcore::Geometry_Geometry_service
+		larcorealg::Geometry
+		lardataobj::RecoBase
+		${LARDATA_LIB}
+		canvas::canvas
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		${ART_FRAMEWORK_ART}
+		art::Framework_Core
+		art::Framework_Principal
+		${ART_FRAMEWORK_UTILITIES}
+		${ART_FRAMEWORK_BASIC}
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art_root_io::TFileService_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+		
+	MODULE_LIBRARIES
+		icaruscode::PMT_OpReco_FlashFinder
+		icarusalg::Geometry
+		larcore::Geometry_Geometry_service
+		larcorealg::Geometry
+		lardataobj::RecoBase
+		${LARDATA_LIB}
+                lardata::Utilities
+                larcore::Geometry_AuxDetGeometry_service
+		canvas::canvas
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		${ART_FRAMEWORK_ART}
+		art::Framework_Core
+		art::Framework_Principal
+		${ART_FRAMEWORK_BASIC}
+		art::Framework_Services_Registry
+		art_root_io::tfile_support
+		art_root_io::TFileService_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+		ROOT::Core
+)							
 
 install_headers()
 install_source()
diff --git a/icaruscode/PMT/OpReco/driver/CMakeLists.txt b/icaruscode/PMT/OpReco/driver/CMakeLists.txt
index 251e104..f8bfb37 100644
--- a/icaruscode/PMT/OpReco/driver/CMakeLists.txt
+++ b/icaruscode/PMT/OpReco/driver/CMakeLists.txt
@@ -1,3 +1,3 @@
 install_fhicl()
-#FILE(GLOB fcl_files *.fcl)
-#install_source( EXTRAS ${fcl_files} )
+#FILE(GLOBfcl_files*.fcl)
+#install_source(EXTRAS${fcl_files})
diff --git a/icaruscode/PMT/OpReco/fcl/CMakeLists.txt b/icaruscode/PMT/OpReco/fcl/CMakeLists.txt
index 0361ef3..c51b7b3 100644
--- a/icaruscode/PMT/OpReco/fcl/CMakeLists.txt
+++ b/icaruscode/PMT/OpReco/fcl/CMakeLists.txt
@@ -1,3 +1,3 @@
 install_fhicl()
 FILE(GLOB fcl_files *.fcl)
-install_source( EXTRAS ${fcl_files} )
+install_source(EXTRAS ${fcl_files})
diff --git a/icaruscode/PMT/OpticalTools/CMakeLists.txt b/icaruscode/PMT/OpticalTools/CMakeLists.txt
index 5292feb..9995f9b 100644
--- a/icaruscode/PMT/OpticalTools/CMakeLists.txt
+++ b/icaruscode/PMT/OpticalTools/CMakeLists.txt
@@ -1,36 +1,37 @@
 cet_enable_asserts()
 
-art_make( 
-          TOOL_LIBRARIES  icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                          larcorealg_Geometry
-                          larevt_CalibrationDBI_IOVData
-                          larevt_CalibrationDBI_Providers
-			              lardataobj_RecoBase
-			              larcore_Geometry_Geometry_service
-			              lardata_Utilities
-			              nurandom_RandomUtils_NuRandomService_service
-  			              ${ART_FRAMEWORK_CORE}
-			              ${ART_FRAMEWORK_PRINCIPAL}
-			              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-			              art_Persistency_Common
-			              art_Persistency_Provenance
-			              ${ART_FRAMEWORK_SERVICES_BASIC}
-			              ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-			              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			              ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-			              art_Utilities
-			              canvas
-			              ${MF_MESSAGELOGGER}
-			              ${MF_UTILITIES}
-			              ${FHICLCPP}
-			              ${CETLIB}
-			              cetlib_except
-			              ${Boost_FILESYSTEM_LIBRARY}
-			              ${Boost_SYSTEM_LIBRARY}
-                          ${CLHEP}
-			              ${ROOT_BASIC_LIB_LIST}
-    )
+art_make(
+		TOOL_LIBRARIES
+			icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+			larcorealg::Geometry
+			larevt::CalibrationDBI_IOVData
+			larevt::CalibrationDBI_Providers
+			lardataobj::RecoBase
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+			nurandom::RandomUtils_NuRandomService_service
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art::Persistency_Common
+			art::Persistency_Provenance
+			
+			art_root_io::tfile_support
+			ROOT::Core
+			art::Framework_Services_Optional_RandomNumberGenerator_service
+			art_root_io::TFileService_service
+			art::Framework_Services_System_FileCatalogMetadata_service
+			art::Utilities
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			cetlib_except::cetlib_except
+			Boost::filesystem
+			Boost::system
+			CLHEP::Random
+)
 
 install_headers()
 install_source()
diff --git a/icaruscode/PMT/Trigger/Algorithms/CMakeLists.txt b/icaruscode/PMT/Trigger/Algorithms/CMakeLists.txt
index ef910a7..32ed21c 100644
--- a/icaruscode/PMT/Trigger/Algorithms/CMakeLists.txt
+++ b/icaruscode/PMT/Trigger/Algorithms/CMakeLists.txt
@@ -1,16 +1,19 @@
 cet_make(
-  SUBDIRS
-    "details"
-  LIBRARIES
-    sbnobj_ICARUS_PMT_Trigger_Data
-    icaruscode_PMT_Algorithms
-    lardataalg_DetectorInfo
-    lardataalg_MCDumpers
-    lardataobj_RawData
-    nusimdata_SimulationBase
-    MF_MessageLogger
-    fhiclcpp
-  )
+	SUBDIRS
+		"details"
+	LIBRARIES
+                range-v3::range-v3
+                art::Framework_Principal
+		sbnobj::ICARUS_PMT_Trigger_Data
+		icaruscode::PMT_Algorithms
+		lardataalg::DetectorInfo
+		lardataalg::MCDumpers
+		lardataobj::RawData
+                icarusalg::Utilities
+		nusimdata::SimulationBase
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+	)
 
 install_headers(SUBDIRS "details")
 install_source(SUBDIRS "details")
diff --git a/icaruscode/PMT/Trigger/CMakeLists.txt b/icaruscode/PMT/Trigger/CMakeLists.txt
index 7abf36b..1028715 100644
--- a/icaruscode/PMT/Trigger/CMakeLists.txt
+++ b/icaruscode/PMT/Trigger/CMakeLists.txt
@@ -3,210 +3,239 @@ add_subdirectory(Utilities)
 add_subdirectory(scripts)
 
 art_make(
-  EXCLUDE
-    "DiscriminatePMTwaveformsByChannel_module.cc"
-    "MajorityTriggerSimulation_module.cc"
-    "SlidingWindowTrigger_module.cc"
-    "SlidingWindowTriggerSimulation_module.cc"
-    "TriggerEfficiencyPlots_module.cc"
-    "MajorityTriggerEfficiencyPlots_module.cc"
-    "SlidingWindowTriggerEfficiencyPlots_module.cc"
-    "MakeTriggerSimulationTree_module.cc"
-  LIB_LIBRARIES
-    icaruscode_PMT_Trigger_Algorithms
-    icaruscode_PMT_Trigger_Utilities
-    sbnobj_ICARUS_PMT_Trigger_Data
-    larcore_Geometry_Geometry_service
-    lardataalg_MCDumpers
-    larcorealg_Geometry
-    lardataobj_RawData
-    nusimdata_SimulationBase
-    ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-    ${ART_ROOT_IO_TFILE_SUPPORT}
-    ${ART_FRAMEWORK_SERVICES_REGISTRY}
-    ${ART_FRAMEWORK_PRINCIPAL}
-    ${ART_FRAMEWORK_CORE}
-    ${ART_PERSISTENCY_PROVENANCE}
-    ${ART_UTILITIES}
-    ${CANVAS}
-    ${MF_MESSAGELOGGER}
-    ${FHICLCPP}
-    ${CETLIB_EXCEPT}
-    ROOT::GenVector
-    ROOT::Hist
-    ROOT::Tree
-    ROOT::Core
-  MODULE_LIBRARIES
-    icaruscode_PMT_Trigger_Algorithms
-    sbnobj_ICARUS_PMT_Trigger_Data
-    lardataalg_DetectorInfo
-    lardataobj_RawData
-    ${ART_FRAMEWORK_SERVICES_REGISTRY}
-    ${MF_MESSAGELOGGER}
-    ${FHICLCPP}
-    ROOT::Core
-    ROOT::Physics
-  TOOL_LIBRARIES
-    icaruscode_PMT_Trigger_Algorithms
-    sbnobj_ICARUS_PMT_Trigger_Data
-    lardataalg_DetectorInfo
-    lardataobj_RawData
-    ${MF_MESSAGELOGGER}
-    ${FHICLCPP}
-  )
+	EXCLUDE
+		"DiscriminatePMTwaveformsByChannel_module.cc"
+		"MajorityTriggerSimulation_module.cc"
+		"SlidingWindowTrigger_module.cc"
+		"SlidingWindowTriggerSimulation_module.cc"
+		"TriggerEfficiencyPlots_module.cc"
+		"MajorityTriggerEfficiencyPlots_module.cc"
+		"SlidingWindowTriggerEfficiencyPlots_module.cc"
+		"MakeTriggerSimulationTree_module.cc"
+	LIB_LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		icaruscode::PMT_Trigger_Utilities
+		sbnobj::ICARUS_PMT_Trigger_Data
+		larcore::Geometry_Geometry_service
+		lardataalg::MCDumpers
+		larcorealg::Geometry
+		lardataobj::RawData
+                lardata::Utilities
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		nusimdata::SimulationBase
+		art_root_io::TFileService_service
+		art_root_io::tfile_support
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::GenVector
+		ROOT::Hist
+		ROOT::Tree
+		ROOT::Core
+	MODULE_LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		sbnobj::ICARUS_PMT_Trigger_Data
+		lardataalg::DetectorInfo
+		lardataobj::RawData
+                lardata::Utilities
+		larcore::Geometry_Geometry_service
+		art::Framework_Services_Registry
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		ROOT::Core
+		ROOT::Physics
+		TOOL_LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		sbnobj::ICARUS_PMT_Trigger_Data
+		lardataalg::DetectorInfo
+		lardataobj::RawData
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		larcore::Geometry_Geometry_service
+	)
 
 simple_plugin(DiscriminatePMTwaveformsByChannel module
-  icaruscode_PMT_Trigger_Algorithms
-  sbnobj_ICARUS_PMT_Trigger_Data
-  sbnobj_ICARUS_PMT_Data
-  sbnobj_Common_PMT_Data
-  icaruscode_PMT_Trigger_Utilities
-  icaruscode_PMT_Algorithms
-  lardataobj_RawData
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_CORE}
-  ${CANVAS}
-  ${MF_MESSAGELOGGER}
-  ${FHICLCPP}
-  ${CETLIB_EXCEPT}
-  ROOT::Core
-  )
+                LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		sbnobj::ICARUS_PMT_Trigger_Data
+		sbnobj::ICARUS_PMT_Data
+		sbnobj::Common_PMT_Data
+		icaruscode::PMT_Trigger_Utilities
+		icaruscode::PMT_Algorithms
+		lardataobj::RawData
+                lardata::Utilities
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		larcore::Geometry_Geometry_service
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::Core
+		)
 
 simple_plugin(SlidingWindowTrigger module
-  icaruscode_PMT_Trigger_Algorithms
-  sbnobj_ICARUS_PMT_Trigger_Data
-  icaruscode_PMT_Trigger_Utilities
-  icaruscode_PMT_Algorithms
-  larcore_Geometry_Geometry_service
-  larcorealg_Geometry
-  lardataobj_RawData
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_CORE}
-  ${CANVAS}
-  ${MF_MESSAGELOGGER}
-  ${FHICLCPP}
-  ${CETLIB_EXCEPT}
-  ROOT::Core
-  )
+                LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		sbnobj::ICARUS_PMT_Trigger_Data
+		icaruscode::PMT_Trigger_Utilities
+		icaruscode::PMT_Algorithms
+		larcore::Geometry_Geometry_service
+		larcorealg::Geometry
+                lardata::Utilities
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		lardataobj::RawData
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::Core
+		)
 
 simple_plugin(MajorityTriggerSimulation module
-  icaruscode_PMT_Trigger_Algorithms
-  sbnobj_ICARUS_PMT_Trigger_Data
-  icaruscode_PMT_Trigger_Utilities
-  larcore_Geometry_Geometry_service
-  larcorealg_Geometry
-  lardataobj_RawData
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_CORE}
-  ${CANVAS}
-  ${MF_MESSAGELOGGER}
-  ${FHICLCPP}
-  ${CETLIB_EXCEPT}
-  ROOT::Hist
-  ROOT::Core
-  )
+                LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		sbnobj::ICARUS_PMT_Trigger_Data
+		icaruscode::PMT_Trigger_Utilities
+		larcore::Geometry_Geometry_service
+		larcorealg::Geometry
+                lardata::Utilities
+		lardataobj::RawData
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		art_root_io::TFileService_service
+		art_root_io::tfile_support
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::Hist
+		ROOT::Core
+		)
 
 simple_plugin(SlidingWindowTriggerSimulation module
-  icaruscode_PMT_Trigger_Algorithms
-  sbnobj_ICARUS_PMT_Trigger_Data
-  icaruscode_PMT_Trigger_Utilities
-  larcore_Geometry_Geometry_service
-  larcorealg_Geometry
-  lardataobj_RawData
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_CORE}
-  ${CANVAS}
-  ${MF_MESSAGELOGGER}
-  ${FHICLCPP}
-  ${CETLIB_EXCEPT}
-  ROOT::Hist
-  ROOT::Core
-  )
+                LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		sbnobj::ICARUS_PMT_Trigger_Data
+		icaruscode::PMT_Trigger_Utilities
+		larcore::Geometry_Geometry_service
+		larcorealg::Geometry
+		lardataobj::RawData
+                lardata::Utilities
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		art_root_io::TFileService_service
+		art_root_io::tfile_support
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::Hist
+		ROOT::Core
+		)
 
 simple_plugin(TriggerEfficiencyPlots module
-  icaruscode_PMT_Trigger_Utilities
-  sbnobj_ICARUS_PMT_Trigger_Data
-  larcore_Geometry_Geometry_service
-  lardataalg_MCDumpers
-  larcorealg_Geometry
-  lardataobj_RawData
-  nusimdata_SimulationBase
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_CORE}
-  ${CANVAS}
-  ${MF_MESSAGELOGGER}
-  ${FHICLCPP}
-  ${CETLIB_EXCEPT}
-  ROOT::GenVector
-  ROOT::Hist
-  ROOT::Tree
-  ROOT::Core
-  )
+                LIBRARIES
+                icarusalg::Utilities
+		icaruscode::PMT_Trigger_Utilities
+		sbnobj::ICARUS_PMT_Trigger_Data
+		larcore::Geometry_Geometry_service
+		lardataalg::MCDumpers
+		larcorealg::Geometry
+		lardataobj::RawData
+                lardata::Utilities
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		nusimdata::SimulationBase
+		art_root_io::TFileService_service
+		art_root_io::tfile_support
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::GenVector
+		ROOT::Hist
+		ROOT::Tree
+		ROOT::Core
+		)
 
 simple_plugin(MakeTriggerSimulationTree module
-  icaruscode_PMT_Trigger_Algorithms
-  icaruscode_PMT_Trigger_Utilities
-  sbnobj_ICARUS_PMT_Trigger_Data
-  larcore_Geometry_Geometry_service
-  lardataalg_MCDumpers
-  larcorealg_Geometry
-  nusimdata_SimulationBase
-  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-  ${ART_ROOT_IO_TFILE_SUPPORT}
-  ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ART_FRAMEWORK_PRINCIPAL}
-  ${ART_FRAMEWORK_CORE}
-  ${CANVAS}
-  ${MF_MESSAGELOGGER}
-  ${FHICLCPP}
-  ${CETLIB_EXCEPT}
-  ROOT::GenVector
-  ROOT::Tree
-  ROOT::Core
-  )
+                LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		icaruscode::PMT_Trigger_Utilities
+		sbnobj::ICARUS_PMT_Trigger_Data
+		larcore::Geometry_Geometry_service
+		lardataalg::MCDumpers
+                lardata::Utilities
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		larcorealg::Geometry
+		nusimdata::SimulationBase
+		art_root_io::TFileService_service
+		art_root_io::tfile_support
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::GenVector
+		ROOT::Tree
+		ROOT::Core
+		)
 
 # trigger efficiency plot modules with the same build configuration:
 foreach(TriggerEfficiencyPlotsModule
-  MajorityTriggerEfficiencyPlots
-  SlidingWindowTriggerEfficiencyPlots
-)
+	MajorityTriggerEfficiencyPlots
+	SlidingWindowTriggerEfficiencyPlots
+	)
 
-  simple_plugin(${TriggerEfficiencyPlotsModule} module
-    icaruscode_PMT_Trigger_Algorithms
-    icaruscode_PMT_Trigger
-    icaruscode_PMT_Trigger_Utilities
-    sbnobj_ICARUS_PMT_Trigger_Data
-    larcore_Geometry_Geometry_service
-    lardataalg_MCDumpers
-    larcorealg_Geometry
-    lardataobj_RawData
-    nusimdata_SimulationBase
-    ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-    ${ART_ROOT_IO_TFILE_SUPPORT}
-    ${ART_FRAMEWORK_SERVICES_REGISTRY}
-    ${ART_FRAMEWORK_PRINCIPAL}
-    ${ART_FRAMEWORK_CORE}
-    ${ART_FRAMEWORK_PRINCIPAL}
-    ${CANVAS}
-    ${MF_MESSAGELOGGER}
-    ${FHICLCPP}
-    ${CETLIB_EXCEPT}
-    ROOT::GenVector
-    ROOT::Hist
-    ROOT::Tree
-    ROOT::Core
-    )
+	simple_plugin(${TriggerEfficiencyPlotsModule} module
+                LIBRARIES
+		icaruscode::PMT_Trigger_Algorithms
+		icaruscode::PMT_Trigger
+		icaruscode::PMT_Trigger_Utilities
+		sbnobj::ICARUS_PMT_Trigger_Data
+		larcore::Geometry_Geometry_service
+		lardataalg::MCDumpers
+                lardata::Utilities
+		lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+		larcorealg::Geometry
+		lardataobj::RawData
+		nusimdata::SimulationBase
+		art_root_io::TFileService_service
+		art_root_io::tfile_support
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		art::Framework_Principal
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::GenVector
+		ROOT::Hist
+		ROOT::Tree
+		ROOT::Core
+		)
 
 endforeach()
 
diff --git a/icaruscode/PMT/Trigger/Utilities/CMakeLists.txt b/icaruscode/PMT/Trigger/Utilities/CMakeLists.txt
index b5b7ac2..1cab5ce 100644
--- a/icaruscode/PMT/Trigger/Utilities/CMakeLists.txt
+++ b/icaruscode/PMT/Trigger/Utilities/CMakeLists.txt
@@ -1,15 +1,16 @@
 if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
-cet_add_compiler_flags(CXX -Wno-maybe-uninitialized)
+	cet_add_compiler_flags(CXX -Wno-maybe-uninitialized)
 endif()
 
 art_make(
-  LIB_LIBRARIES
-    ${ART_ROOT_IO_TFILE_SUPPORT}
-    ${MF_MESSAGELOGGER}
-    ${CETLIB_EXCEPT}
-    ${ROOT_RIO}
-    ${ROOT_CORE}
-  )
+	LIB_LIBRARIES
+                larcorealg::CoreUtils
+		art_root_io::tfile_support
+		messagefacility::MF_MessageLogger
+		cetlib_except::cetlib_except
+		ROOT::RIO
+		ROOT::Core
+	)
 
 install_headers()
 install_source()
diff --git a/icaruscode/RecoUtils/CMakeLists.txt b/icaruscode/RecoUtils/CMakeLists.txt
index aa70ef5..b1a0ade 100644
--- a/icaruscode/RecoUtils/CMakeLists.txt
+++ b/icaruscode/RecoUtils/CMakeLists.txt
@@ -1,34 +1,33 @@
 art_make(
-             LIB_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation lardataobj_Simulation
-                           larsim_MCCheater_BackTrackerService_service
-                           larsim_MCCheater_ParticleInventoryService_service
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataobj_RecoBase
-                           lardata_RecoObjects
-                           larpandora_LArPandoraInterface
-                           nusimdata_SimulationBase
-                           cetlib cetlib_except
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common canvas
-                           art_Persistency_Provenance canvas
-                           art_Utilities canvas
-                           ${MF_MESSAGELOGGER}
-                           ${MF_UTILITIES}
-                           ${FHICLCPP}
-                           ${ROOT_GEOM}
-                           ${ROOT_XMLIO}
-                           ${ROOT_GDML}
-                           ${ROOT_BASIC_LIB_LIST}
-                           ${Boost_SYSTEM_LIBRARY}
-        )
+     LIB_LIBRARIES larcorealg::Geometry
+          larcore::Geometry_Geometry_service
+          larsim::Simulation lardataobj::Simulation
+          larsim::MCCheater_BackTrackerService_service
+          larsim::MCCheater_ParticleInventoryService_service
+          lardata::Utilities
+          larevt::Filters
+          lardataobj::RawData
+          lardataobj::RecoBase
+          lardata::RecoObjects
+          larpandora::LArPandoraInterface
+          nusimdata::SimulationBase
+          cetlib::cetlib cetlib_except::cetlib_except
+          art::Framework_Core
+          art::Framework_Principal
+          art::Framework_Services_Registry
+          art_root_io::tfile_support ROOT::Core
+          art_root_io::TFileService_service
+          art::Persistency_Common canvas::canvas
+          art::Persistency_Provenance
+          art::Utilities
+          messagefacility::MF_MessageLogger
+          messagefacility::headers
+          fhiclcpp::fhiclcpp
+          ROOT::Geom
+          ROOT::XMLIO
+          ROOT::Gdml
+          Boost::system
+)
 
 install_headers()
 install_fhicl()
@@ -36,39 +35,39 @@ install_source()
 
 
 #art_make(
-#	  LIB_LIBRARIES larcorealg_Geometry
-#	  	        larcore_Geometry_Geometry_service
-#		        larsim_Simulation nurandom_ParticleNavigation lardataobj_Simulation
-# 	  	        larsim_MCCheater_BackTracker_service
-#	  	        lardata_Utilities
-#larevt_Filters
-#	  	        lardataobj_RawData
-#	  	        lardataobj_RecoBase
-#	  	        lardata_RecoObjects
+#     LIB_LIBRARIES larcorealg::Geometry
+#          larcore::Geometry_Geometry_service
+#          larsim_Simulationnurandom_ParticleNavigation lardataobj::Simulation
+#          larsim::MCCheater_BackTracker_service
+#          lardata::Utilities
+#larevt::Filters
+#          lardataobj::RawData
+#          lardataobj::RecoBase
+#          lardata::RecoObjects
 #larreco_RecoAlg
 #larreco_Calorimetry
 #larpandora_LArPandoraInterface
-#          	        nusimdata_SimulationBase
-#          	        ${LARRECO_LIB}
-#          	        ${LARDATA_LIB}
-#	  	        ${MF_MESSAGELOGGER}
-#	  	        ${MF_UTILITIES}
-#	  	        ${FHICLCPP}
-#	  	        cetlib cetlib_except
-#          	        ${ROOT_GEOM}
-#          	        ${ROOT_XMLIO}
-#          	        ${ROOT_GDML}
-#	  	        ${ROOT_BASIC_LIB_LIST}
-#	  MODULE_LIBRARIES RecoUtils
-#          	           ${ART_FRAMEWORK_CORE}
-#	  	           ${ART_FRAMEWORK_PRINCIPAL}
-#		       	   ${ART_FRAMEWORK_SERVICES_REGISTRY}
-#	  	       	   ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-#			   ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-#	  	           art_Persistency_Common canvas
-#	  	           art_Persistency_Provenance canvas
-#	  	           art_Utilities canvas
-#        )
+#     nusimdata::SimulationBase
+#     ${LARRECO_LIB}
+#     ${LARDATA_LIB}
+#          messagefacility::MF_MessageLogger
+#          messagefacility::headers
+#          fhiclcpp::fhiclcpp
+#          cetlib::cetlib cetlib_except::cetlib_except
+#     ROOT::Geom
+#     ROOT::XMLIO
+#     ROOT::Gdml
+#          
+#     MODULE_LIBRARIES RecoUtils
+#     art::Framework_Core
+#          art::Framework_Principal
+#               art::Framework_Services_Registry
+#               art_root_io::tfile_support ROOT::Core
+#               art_root_io::TFileService_service
+#          art::Persistency_Commoncanvas
+#          art::Persistency_Provenancecanvas
+#          art::Utilitiescanvas
+#)
 #
 #install_headers()
 ##install_fhicl()
diff --git a/icaruscode/TPC/CMakeLists.txt b/icaruscode/TPC/CMakeLists.txt
index c7ccb4e..b10c89d 100644
--- a/icaruscode/TPC/CMakeLists.txt
+++ b/icaruscode/TPC/CMakeLists.txt
@@ -1,5 +1,5 @@
 
-set( IFDH_ART_DIR $ENV{IFDH_ART_DIR} )
+set(IFDH_ART_DIR$ENV{IFDH_ART_DIR})
 
 add_subdirectory(Calorimetry)
 add_subdirectory(Utilities)
diff --git a/icaruscode/TPC/Calorimetry/Algorithms/CMakeLists.txt b/icaruscode/TPC/Calorimetry/Algorithms/CMakeLists.txt
old mode 100755
new mode 100644
index 1b8217c..c493141
--- a/icaruscode/TPC/Calorimetry/Algorithms/CMakeLists.txt
+++ b/icaruscode/TPC/Calorimetry/Algorithms/CMakeLists.txt
@@ -1,68 +1,69 @@
-art_make( 
-          LIB_LIBRARIES 
-                          lardataobj_RawData
-                          lardataobj_RecoBase
-                          lardata_Utilities
-                          ${FHICLCPP}
-                          cetlib cetlib_except
-                          ${ROOT_BASIC_LIB_LIST}
-                          larcorealg_Geometry
-                          larcore_Geometry_Geometry_service
-                          lardata_Utilities
-                          larevt_Filters
-                          lardataobj_RawData
-                          larevt_CalibrationDBI_IOVData
-                          larevt_CalibrationDBI_Providers
-                          lardataalg_DetectorInfo
-                          lardataobj_RecoBase
-                          icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                          ${ICARUS_FFTW_LIBRARIES}
-                          ${ART_FRAMEWORK_CORE}
-                          ${ART_FRAMEWORK_PRINCIPAL}
-                          ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                          ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                          art_Persistency_Common canvas
-                          art_Persistency_Provenance canvas
-                          art_Utilities canvas
-                          ${MF_MESSAGELOGGER}
-                          ${MF_UTILITIES}
-                          ${FHICLCPP}
-                          cetlib cetlib_except
-                          ${ROOT_GEOM}
-                          ${ROOT_XMLIO}
-                          ${ROOT_GDML}
-                          ${ROOT_FFTW}
-                          ${ROOT_BASIC_LIB_LIST}
+include_directories(${FFTW3_INCLUDE_DIRS})
+link_directories(${FFTW3_LIBRARY_DIRS})
 
-          TOOL_LIBRARIES  icaruscode_TPC_Calorimetry_Algorithms
-                          icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                          lardataobj_RawData
-                          lardataobj_RecoBase
-                          lardata_Utilities
-                          ${FHICLCPP}
-                          cetlib cetlib_except
-                          larcorealg_Geometry
-                          larcore_Geometry_Geometry_service
-                          larevt_CalibrationDBI_IOVData
-                          larevt_CalibrationDBI_Providers
-                          ${ICARUS_FFTW_LIBRARIES}
-                          ${ART_FRAMEWORK_CORE}
-                          ${ART_FRAMEWORK_PRINCIPAL}
-                          ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                          ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                          art_Persistency_Common canvas
-                          art_Persistency_Provenance canvas
-                          art_Utilities canvas
-                          ${MF_MESSAGELOGGER}
-                          ${MF_UTILITIES}
-                          ${FHICLCPP}
-                          cetlib cetlib_except
-                          ${ROOT_GEOM}
-                          ${ROOT_FFTW}
-                          ${ROOT_BASIC_LIB_LIST}
-       )
+art_make(
+	LIB_LIBRARIES
+		lardataobj::RawData
+		lardataobj::RecoBase
+		lardata::Utilities
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		lardata::Utilities
+		larevt::Filters
+		lardataobj::RawData
+		larevt::CalibrationDBI_IOVData
+		larevt::CalibrationDBI_Providers
+		lardataalg::DetectorInfo
+		lardataobj::RecoBase
+		icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+		${ICARUS_FFTW_LIBRARIES}
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art_root_io::TFileService_service
+		art::Persistency_Common canvas::canvas
+		art::Persistency_Provenance canvas::canvas
+		art::Utilities canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+		ROOT::FFTW
+
+	TOOL_LIBRARIES
+		icaruscode::TPC_Calorimetry_Algorithms
+		icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+		lardataobj::RawData
+		lardataobj::RecoBase
+		lardata::Utilities
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		larevt::CalibrationDBI_IOVData
+		larevt::CalibrationDBI_Providers
+		${ICARUS_FFTW_LIBRARIES}
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art_root_io::TFileService_service
+		art::Persistency_Common canvas::canvas
+		art::Persistency_Provenance canvas::canvas
+		art::Utilities canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		ROOT::Geom
+		ROOT::FFTW
+	)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/Calorimetry/CMakeLists.txt b/icaruscode/TPC/Calorimetry/CMakeLists.txt
index d84c1aa..c08fe8f 100644
--- a/icaruscode/TPC/Calorimetry/CMakeLists.txt
+++ b/icaruscode/TPC/Calorimetry/CMakeLists.txt
@@ -1,27 +1,27 @@
 add_subdirectory(Algorithms)
 
-# Build the module
-art_make( MODULE_LIBRARIES
-           icaruscode_TPC_Calorimetry_Algorithms
-           larcorealg_Geometry
-           larreco_Calorimetry
-           lardataobj_RecoBase
-           lardata_ArtDataHelper
-           lardataalg_DetectorInfo
-           larcorealg_Geometry
-           lardataobj_AnalysisBase
-           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-           ${ART_UTILITIES}
-           canvas
-           ${FHICLCPP}
-           cetlib_except
-           ROOT::Core
-           ROOT::Physics
-           ROOT::Core
-           ROOT::Hist
-           ROOT::Physics
-           ${MF_MESSAGELOGGER}
-         )
+#Buildthemodule
+art_make(MODULE_LIBRARIES
+		icaruscode::TPC_Calorimetry_Algorithms
+		larcorealg::Geometry
+		larreco::Calorimetry
+		lardataobj::RecoBase
+		lardata::ArtDataHelper
+		lardataalg::DetectorInfo
+		larcorealg::Geometry
+		lardataobj::AnalysisBase
+		art::Framework_Services_Registry
+		art::Utilities
+		canvas::canvas
+		fhiclcpp::fhiclcpp
+		cetlib_except::cetlib_except
+		ROOT::Core
+		ROOT::Physics
+		ROOT::Core
+		ROOT::Hist
+		ROOT::Physics
+		messagefacility::MF_MessageLogger
+		)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/ICARUSWireCell/icarus/CMakeLists.txt b/icaruscode/TPC/ICARUSWireCell/icarus/CMakeLists.txt
index c15f855..f7592a1 100644
--- a/icaruscode/TPC/ICARUSWireCell/icarus/CMakeLists.txt
+++ b/icaruscode/TPC/ICARUSWireCell/icarus/CMakeLists.txt
@@ -1,7 +1,7 @@
 # Wire-Cell configuration files, required at runtime.
 FILE(GLOB cfg_file *.jsonnet *.fcl )
 message(STATUS "Configuration files ${cfg_file}")
-#install(FILES ${data} DESTINATION #${product}/${version}/WireCellData/pgrapher/experiment/icarus)
+#install(FILES ${data} DESTINATION #WireCellData/pgrapher/experiment/icarus)
 install_wp(LIST ${cfg_file} SUBDIRNAME pgrapher/experiment/icarus)
 
 #add_subdirectory(fhicl)
diff --git a/icaruscode/TPC/SignalProcessing/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/CMakeLists.txt
index 70284c9..077227a 100644
--- a/icaruscode/TPC/SignalProcessing/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/CMakeLists.txt
@@ -1,5 +1,5 @@
 
-set( IFDH_ART_DIR $ENV{IFDH_ART_DIR} )
+set(IFDH_ART_DIR$ENV{IFDH_ART_DIR})
 
 add_subdirectory(HitFinder)
 add_subdirectory(RawDigitFilter)
diff --git a/icaruscode/TPC/SignalProcessing/HitFinder/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/HitFinder/CMakeLists.txt
index 4e507da..44edef1 100644
--- a/icaruscode/TPC/SignalProcessing/HitFinder/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/HitFinder/CMakeLists.txt
@@ -1,42 +1,43 @@
 add_subdirectory(HitFinderTools)
 
-art_make( 
-          LIB_LIBRARIES 
-			           lardataobj_RawData
-                       lardataobj_RecoBase
-	                   lardata_Utilities
-	                   ${FHICLCPP}
-			           ${CETLIB}
-			           ${ROOT_BASIC_LIB_LIST}
-	  MODULE_LIBRARIES larcorealg_Geometry
-	  		           larcore_Geometry_Geometry_service
-	                   lardata_Utilities
-			           larevt_Filters
-			           lardataobj_RawData
-			           larevt_CalibrationDBI_IOVData
-			           larevt_CalibrationDBI_Providers
-			           lardataobj_RecoBase
-			           lardata_ArtDataHelper
-			           larreco_RecoAlg
-                       ${ART_FRAMEWORK_CORE}
-			           ${ART_FRAMEWORK_PRINCIPAL}
-			           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-			           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-			           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			           art_Persistency_Common
-			           art_Persistency_Provenance
-			           art_Utilities
-			           canvas
-			           ${MF_MESSAGELOGGER}
-			           ${MF_UTILITIES}
-	                   ${FHICLCPP}
-			           ${CETLIB}
-                       ${ROOT_GEOM}
-                       ${ROOT_XMLIO}
-                       ${ROOT_GDML}
-			           ${ROOT_FFTW}
-			           ${ROOT_BASIC_LIB_LIST}
-        )
+art_make(
+		LIB_LIBRARIES
+			lardataobj::RawData
+			lardataobj::RecoBase
+			lardata::Utilities
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			
+		MODULE_LIBRARIES
+			larcorealg::Geometry
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+			larevt::Filters
+			lardataobj::RawData
+			larevt::CalibrationDBI_IOVData
+			larevt::CalibrationDBI_Providers
+			lardataobj::RecoBase
+			lardata::ArtDataHelper
+			larreco::RecoAlg
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art_root_io::tfile_support ROOT::Core
+			art_root_io::TFileService_service
+			art::Persistency_Common
+			art::Persistency_Provenance
+			art::Utilities
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			ROOT::Geom
+			ROOT::XMLIO
+			ROOT::Gdml
+			ROOT::FFTW
+			
+	)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/SignalProcessing/HitFinder/HitFinderTools/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/HitFinder/HitFinderTools/CMakeLists.txt
index 1601ea8..51f88fd 100644
--- a/icaruscode/TPC/SignalProcessing/HitFinder/HitFinderTools/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/HitFinder/HitFinderTools/CMakeLists.txt
@@ -1,35 +1,33 @@
 cet_enable_asserts()
 
-set( hitfinder_tool_lib_list
-			larcorealg_Geometry
-			lardataobj_RecoBase
-			larcore_Geometry_Geometry_service
-			lardata_Utilities
-			nurandom_RandomUtils_NuRandomService_service
-  			${ART_FRAMEWORK_CORE}
-			${ART_FRAMEWORK_PRINCIPAL}
-			${ART_FRAMEWORK_SERVICES_REGISTRY}
-			art_Persistency_Common
-			art_Persistency_Provenance
-			${ART_FRAMEWORK_SERVICES_BASIC}
-			${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-            ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-			${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-			art_Utilities
-			canvas
-			${MF_MESSAGELOGGER}
-			${MF_UTILITIES}
-			${FHICLCPP}
-			${CETLIB}
-			${Boost_FILESYSTEM_LIBRARY}
-			${Boost_SYSTEM_LIBRARY}
-            ${CLHEP}
-			${ROOT_BASIC_LIB_LIST}
-    )
+set(hitfinder_tool_lib_list
+			larcorealg::Geometry
+			lardataobj::RecoBase
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+			larreco::HitFinder
+			nurandom::RandomUtils_NuRandomService_service
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art::Persistency_Common
+			art::Persistency_Provenance		
+			art_root_io::tfile_support ROOT::Core
+			art::Framework_Services_Optional_RandomNumberGenerator_service
+			art_root_io::TFileService_service
+			art::Framework_Services_System_FileCatalogMetadata_service
+			art::Utilities
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			Boost::filesystem
+			Boost::system
+			CLHEP::Random			
+)
 
-art_make(TOOL_LIBRARIES ${hitfinder_tool_lib_list}
-        )
+art_make(TOOL_LIBRARIES ${hitfinder_tool_lib_list})
 
 install_headers()
 install_source()
diff --git a/icaruscode/TPC/SignalProcessing/RawDigitFilter/Algorithms/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/RawDigitFilter/Algorithms/CMakeLists.txt
old mode 100755
new mode 100644
index 3561a35..a22323b
--- a/icaruscode/TPC/SignalProcessing/RawDigitFilter/Algorithms/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/RawDigitFilter/Algorithms/CMakeLists.txt
@@ -1,70 +1,77 @@
 
+include_directories(${FFTW3_INCLUDE_DIRS})
+link_directories(${FFTW3_LIBRARY_DIRS})
+
 add_definitions(-DEIGEN_FFTW_DEFAULT)
 
-art_make( 
-          LIB_LIBRARIES 
-                          lardataobj_RawData
-                          lardataobj_RecoBase
-                          lardata_Utilities
-                          ${FHICLCPP}
-                          cetlib cetlib_except
-                          ${ROOT_BASIC_LIB_LIST}
-                          larcorealg_Geometry
-                          larcore_Geometry_Geometry_service
-                          lardata_Utilities
-                          larevt_Filters
-                          lardataobj_RawData
-                          larevt_CalibrationDBI_IOVData
-                          larevt_CalibrationDBI_Providers
-                          lardataobj_RecoBase
-                          icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                          ${ICARUS_FFTW_LIBRARIES}
-                          ${ART_FRAMEWORK_CORE}
-                          ${ART_FRAMEWORK_PRINCIPAL}
-                          ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                          ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                          art_Persistency_Common canvas
-                          art_Persistency_Provenance canvas
-                          art_Utilities canvas
-                          ${MF_MESSAGELOGGER}
-                          ${MF_UTILITIES}
-                          ${FHICLCPP}
-                          cetlib cetlib_except
-                          ${ROOT_GEOM}
-                          ${ROOT_XMLIO}
-                          ${ROOT_GDML}
-                          ${ROOT_FFTW}
-                          ${ROOT_BASIC_LIB_LIST}
+art_make(
+	LIB_LIBRARIES
+		lardataobj::RawData
+		lardataobj::RecoBase
+		lardata::Utilities
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		lardata::Utilities
+		larvecutils::MarqFitAlg
+		larevt::Filters
+		lardataobj::RawData
+		larevt::CalibrationDBI_IOVData
+		larevt::CalibrationDBI_Providers
+		lardataobj::RecoBase
+		icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+		${ICARUS_FFTW_LIBRARIES}
+                icarus_signal_processing::icarus_signal_processing
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art_root_io::TFileService_service
+		art::Persistency_Common canvas::canvas
+		art::Persistency_Provenance
+		art::Utilities
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+		ROOT::FFTW
+		Eigen3::Eigen
+
+	TOOL_LIBRARIES
+		icaruscode::TPC_SignalProcessing_RawDigitFilter_Algorithms
+		icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+		lardataobj::RawData
+		lardataobj::RecoBase
+		lardata::Utilities
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		larevt::CalibrationDBI_IOVData
+		larevt::CalibrationDBI_Providers
+		${ICARUS_FFTW_LIBRARIES}
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art_root_io::TFileService_service
+		art::Persistency_Common canvas::canvas
+		art::Persistency_Provenance
+		art::Utilities
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		ROOT::Geom
+		ROOT::FFTW
 
-          TOOL_LIBRARIES  icaruscode_TPC_SignalProcessing_RawDigitFilter_Algorithms
-                          icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                          lardataobj_RawData
-                          lardataobj_RecoBase
-                          lardata_Utilities
-                          ${FHICLCPP}
-                          cetlib cetlib_except
-                          larcorealg_Geometry
-                          larcore_Geometry_Geometry_service
-                          larevt_CalibrationDBI_IOVData
-                          larevt_CalibrationDBI_Providers
-                          ${ICARUS_FFTW_LIBRARIES}
-                          ${ART_FRAMEWORK_CORE}
-                          ${ART_FRAMEWORK_PRINCIPAL}
-                          ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                          ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                          art_Persistency_Common canvas
-                          art_Persistency_Provenance canvas
-                          art_Utilities canvas
-                          ${MF_MESSAGELOGGER}
-                          ${MF_UTILITIES}
-                          ${FHICLCPP}
-                          cetlib cetlib_except
-                          ${ROOT_GEOM}
-                          ${ROOT_FFTW}
-                          ${ROOT_BASIC_LIB_LIST}
-       )
+)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/SignalProcessing/RawDigitFilter/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/RawDigitFilter/CMakeLists.txt
old mode 100755
new mode 100644
index 1c0c316..a778bd9
--- a/icaruscode/TPC/SignalProcessing/RawDigitFilter/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/RawDigitFilter/CMakeLists.txt
@@ -2,46 +2,50 @@ add_subdirectory(Algorithms)
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
 
+include_directories(${FFTW3_INCLUDE_DIRS})
+
 art_make(
-          LIB_LIBRARIES 
-                        lardataobj_RawData
-                        lardataobj_RecoBase
-                        lardata_Utilities
-                        ${FHICLCPP}
-                        cetlib cetlib_except
-                        ${ROOT_BASIC_LIB_LIST}
-          MODULE_LIBRARIES
-                        larcorealg_Geometry
-                        icaruscode_TPC_SignalProcessing_RawDigitFilter_Algorithms
-                        larcore_Geometry_Geometry_service
-                        lardata_Utilities
-                        larevt_Filters
-                        lardataobj_RawData
-                        lardataalg_DetectorInfo
-                        larevt_CalibrationDBI_IOVData
-                        larevt_CalibrationDBI_Providers
-                        lardataobj_RecoBase
-                        lardata_ArtDataHelper
-                        icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        art_Persistency_Common canvas
-                        art_Persistency_Provenance canvas
-                        art_Utilities canvas
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        ${FHICLCPP}
-                        cetlib cetlib_except
-                        ${ROOT_GEOM}
-                        ${ROOT_XMLIO}
-                        ${ROOT_GDML}
-			${ROOT_FFTW}
-			${ROOT_BASIC_LIB_LIST}
+		LIB_LIBRARIES
+			lardataobj::RawData
+			lardataobj::RecoBase
+			lardata::Utilities
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib cetlib_except::cetlib_except
+		MODULE_LIBRARIES
+			larcorealg::Geometry
+			icaruscode::TPC_SignalProcessing_RawDigitFilter_Algorithms
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+			larvecutils::MarqFitAlg
+			larevt::Filters
+			lardataobj::RawData
+			lardataalg::DetectorInfo
+			larevt::CalibrationDBI_IOVData
+			larevt::CalibrationDBI_Providers
+			lardataobj::RecoBase
+			lardata::ArtDataHelper
+			icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art_root_io::tfile_support ROOT::Core
+			art_root_io::TFileService_service
+			art::Persistency_Common
+			canvas::canvas
+			art::Persistency_Provenance
+			art::Utilities
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib cetlib_except::cetlib_except
+			ROOT::Geom
+			ROOT::XMLIO
+			ROOT::Gdml
+			ROOT::FFTW
+			ROOT::Core
+                        ROOT::Tree
 			${TBB}
-        )
+	)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/SignalProcessing/RecoWire/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/RecoWire/CMakeLists.txt
index 8d0f154..f339f1d 100644
--- a/icaruscode/TPC/SignalProcessing/RecoWire/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/RecoWire/CMakeLists.txt
@@ -1,54 +1,54 @@
 if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
-cet_add_compiler_flags(CXX -Wno-maybe-uninitialized)
+	cet_add_compiler_flags(CXX -Wno-maybe-uninitialized)
 endif()
 
-# Add the subfolder containing the deconvolution tools
+#Add the subfolder containing the deconvolution tools
 add_subdirectory(DeconTools)
 add_subdirectory(ROITools)
 add_subdirectory(SimTestPulse)
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
+include_directories(${FFTW3_INCLUDE_DIRS})
 
-art_make( 
-          LIB_LIBRARIES 
-            lardataobj_RawData
-            lardataobj_RecoBase
-            lardata_Utilities
-            ${FHICLCPP}
-            ${CETLIB}
-            ${ROOT_BASIC_LIB_LIST}
-          MODULE_LIBRARIES 
-            icarus_signal_processing
-            icarus_signal_processing_Detection
-            icarus_signal_processing_Filters
-            larcorealg_Geometry
-            larcore_Geometry_Geometry_service
-            lardata_Utilities
-            lardataalg_DetectorInfo
-            larevt_Filters
-            lardataobj_RawData
-            larevt_CalibrationDBI_IOVData
-            larevt_CalibrationDBI_Providers
-            lardataobj_RecoBase
-            lardata_ArtDataHelper
-            icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-            ${ART_FRAMEWORK_CORE}
-            ${ART_FRAMEWORK_PRINCIPAL}
-            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-            ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-            art_Persistency_Common
-            art_Persistency_Provenance
-            art_Utilities
-            canvas
-            ${MF_MESSAGELOGGER}
-            ${MF_UTILITIES}
-            ${FHICLCPP}
-            ${CETLIB}
-            ${ROOT_FFTW}
-            ${ROOT_BASIC_LIB_LIST}
-            ${TBB}
-        )
+art_make(
+		LIB_LIBRARIES
+			lardataobj::RawData
+			lardataobj::RecoBase
+			lardata::Utilities
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+
+		MODULE_LIBRARIES
+			icarus_signal_processing::icarus_signal_processing
+			icarus_signal_processing::Detection
+			icarus_signal_processing::Filters
+			larcorealg::Geometry
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+			lardataalg::DetectorInfo
+			larevt::Filters
+			lardataobj::RawData
+			larevt::CalibrationDBI_IOVData
+			larevt::CalibrationDBI_Providers
+			lardataobj::RecoBase
+			lardata::ArtDataHelper
+			icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art_root_io::tfile_support ROOT::Core
+			art_root_io::TFileService_service
+			art::Persistency_Common
+			art::Persistency_Provenance
+			art::Utilities
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			ROOT::FFTW
+			${TBB}
+		)
 
 install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/SignalProcessing/RecoWire/DeconTools/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/RecoWire/DeconTools/CMakeLists.txt
index 6b7d4c3..50ff762 100644
--- a/icaruscode/TPC/SignalProcessing/RecoWire/DeconTools/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/RecoWire/DeconTools/CMakeLists.txt
@@ -1,38 +1,39 @@
 cet_enable_asserts()
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
+include_directories(${FFTW3_INCLUDE_DIRS})
 
-art_make( 
-          TOOL_LIBRARIES  larcorealg_Geometry
-                          larevt_CalibrationDBI_IOVData
-                          larevt_CalibrationDBI_Providers
-                          lardataobj_RecoBase
-                          larcore_Geometry_Geometry_service
-                          lardata_Utilities
-                          lardataalg_DetectorInfo
-                          icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                          nurandom_RandomUtils_NuRandomService_service
-                          ${ART_FRAMEWORK_CORE}
-                          ${ART_FRAMEWORK_PRINCIPAL}
-                          ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                          art_Persistency_Common
-                          art_Persistency_Provenance
-                          ${ART_FRAMEWORK_SERVICES_BASIC}
-                          ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                          ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-                          art_Utilities
-                          canvas
-                          ${MF_MESSAGELOGGER}
-                          ${MF_UTILITIES}
-                          ${FHICLCPP}
-                          ${CETLIB}
-                          ${Boost_FILESYSTEM_LIBRARY}
-                          ${Boost_SYSTEM_LIBRARY}
-                          ${CLHEP}
-                          ${ROOT_BASIC_LIB_LIST}
-    )
+art_make(
+	TOOL_LIBRARIES
+			larcorealg::Geometry
+			larevt::CalibrationDBI_IOVData
+			larevt::CalibrationDBI_Providers
+			lardataobj::RecoBase
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+			lardataalg::DetectorInfo
+			icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+			nurandom::RandomUtils_NuRandomService_service
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art::Persistency_Common
+			art::Persistency_Provenance
+			icarus_signal_processing::icarus_signal_processing		
+			art_root_io::tfile_support ROOT::Core
+			art::Framework_Services_Optional_RandomNumberGenerator_service
+			art_root_io::TFileService_service
+			art::Framework_Services_System_FileCatalogMetadata_service
+			art::Utilities
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			Boost::filesystem
+			Boost::system
+			CLHEP::Random
+)
 
 install_headers()
 install_source()
diff --git a/icaruscode/TPC/SignalProcessing/RecoWire/ROITools/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/RecoWire/ROITools/CMakeLists.txt
index 753cfd5..143cd1c 100644
--- a/icaruscode/TPC/SignalProcessing/RecoWire/ROITools/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/RecoWire/ROITools/CMakeLists.txt
@@ -2,40 +2,40 @@ cet_enable_asserts()
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
 
-art_make( 
-          TOOL_LIBRARIES  larcorealg_Geometry
-                          icarus_signal_processing
-                          icarus_signal_processing_Detection
-                          icarus_signal_processing_Filters
-                          larevt_CalibrationDBI_IOVData
-                          larevt_CalibrationDBI_Providers
-                          lardataobj_RecoBase
-                          larcore_Geometry_Geometry_service
-                          lardata_Utilities
-                          lardataalg_DetectorInfo
-                          icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                          nurandom_RandomUtils_NuRandomService_service
-                          ${ART_FRAMEWORK_CORE}
-                          ${ART_FRAMEWORK_PRINCIPAL}
-                          ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                          art_Persistency_Common
-                          art_Persistency_Provenance
-                          ${ART_FRAMEWORK_SERVICES_BASIC}
-                          ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                          ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-                          art_Utilities
-                          canvas
-                          ${MF_MESSAGELOGGER}
-                          ${MF_UTILITIES}
-                          ${FHICLCPP}
-                          ${CETLIB}
-                          ${Boost_FILESYSTEM_LIBRARY}
-                          ${Boost_SYSTEM_LIBRARY}
-                          ${CLHEP}
-                          ${ROOT_BASIC_LIB_LIST}
-    )
+art_make(
+	TOOL_LIBRARIES
+		larcorealg::Geometry
+		icarus_signal_processing::icarus_signal_processing
+		icarus_signal_processing::Detection
+		icarus_signal_processing::Filters
+		larevt::CalibrationDBI_IOVData
+		larevt::CalibrationDBI_Providers
+		lardataobj::RecoBase
+		larcore::Geometry_Geometry_service
+		lardata::Utilities
+		lardataalg::DetectorInfo
+		icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+		nurandom::RandomUtils_NuRandomService_service
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art::Persistency_Common
+		art::Persistency_Provenance
+	        ROOT::Tree
+		art_root_io::tfile_support ROOT::Core
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art_root_io::TFileService_service
+		art::Framework_Services_System_FileCatalogMetadata_service
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		Boost::filesystem
+		Boost::system
+		CLHEP::Random
+)
 
 install_headers()
 install_source()
diff --git a/icaruscode/TPC/SignalProcessing/RecoWire/SimTestPulse/CMakeLists.txt b/icaruscode/TPC/SignalProcessing/RecoWire/SimTestPulse/CMakeLists.txt
index 7de0b72..38733c7 100644
--- a/icaruscode/TPC/SignalProcessing/RecoWire/SimTestPulse/CMakeLists.txt
+++ b/icaruscode/TPC/SignalProcessing/RecoWire/SimTestPulse/CMakeLists.txt
@@ -1,49 +1,48 @@
 
 
-art_make(   LIB_LIBRARIES
-                lardataobj_RawData
-                lardataobj_RecoBase
-                lardata_Utilities
-                ${FHICLCPP}
-                ${CETLIB}
-                ${ROOT_BASIC_LIB_LIST}
-            MODULE_LIBRARIES
-                icaruscode_TPC_SignalProcessing_RecoWire_SimTestPulse
-                icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                lardata_Utilities
-                lardata_DetectorInfoServices_DetectorClocksServiceStandard_service
-                lardataobj_Simulation
-                larcoreobj_SummaryData
-                larcorealg_Geometry
-                larevt_CalibrationDBI_IOVData
-                larevt_CalibrationDBI_Providers
-                larreco_HitFinder
-                lardataobj_RecoBase
-                larcorealg_Geometry
-                larcore_Geometry_Geometry_service
-                lardata_Utilities
-                nurandom_RandomUtils_NuRandomService_service
-                lardata_Utilities
-                lardataobj_RawData
-                larevt_CalibrationDBI_IOVData
-                larevt_CalibrationDBI_Providers
-                lardataobj_RecoBase
-                lardata_ArtDataHelper
-                ${ART_FRAMEWORK_CORE}
-                ${ART_FRAMEWORK_PRINCIPAL}
-                ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                art_Persistency_Common
-                art_Persistency_Provenance
-                art_Utilities
-                canvas
-                ${MF_MESSAGELOGGER}
-                ${MF_UTILITIES}
-                ${FHICLCPP}
-                ${CETLIB}
-                ${ROOT_FFTW}
-                ${ROOT_BASIC_LIB_LIST}
+art_make(	LIB_LIBRARIES
+			lardataobj::RawData
+			lardataobj::RecoBase
+			lardata::Utilities
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+
+		MODULE_LIBRARIES
+			icaruscode::TPC_SignalProcessing_RecoWire_SimTestPulse
+			icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+			lardata::Utilities
+			lardata::DetectorInfoServices_DetectorClocksServiceStandard_service
+			lardataobj::Simulation
+			larcoreobj::SummaryData
+			larcorealg::Geometry
+			larevt::CalibrationDBI_IOVData
+			larevt::CalibrationDBI_Providers
+			larreco::HitFinder
+			lardataobj::RecoBase
+			larcorealg::Geometry
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+			nurandom::RandomUtils_NuRandomService_service
+			lardata::Utilities
+			lardataobj::RawData
+			larevt::CalibrationDBI_IOVData
+			larevt::CalibrationDBI_Providers
+			lardataobj::RecoBase
+			lardata::ArtDataHelper
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art_root_io::tfile_support ROOT::Core
+			art_root_io::TFileService_service
+			art::Persistency_Common
+			art::Persistency_Provenance
+			art::Utilities
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			ROOT::FFTW
 )
 
 install_fhicl()
diff --git a/icaruscode/TPC/Simulation/CMakeLists.txt b/icaruscode/TPC/Simulation/CMakeLists.txt
index 8d9dc79..082951a 100644
--- a/icaruscode/TPC/Simulation/CMakeLists.txt
+++ b/icaruscode/TPC/Simulation/CMakeLists.txt
@@ -1,5 +1,5 @@
 
-set( IFDH_ART_DIR $ENV{IFDH_ART_DIR} )
+set(IFDH_ART_DIR$ENV{IFDH_ART_DIR})
 
 add_subdirectory(DetSim)
 add_subdirectory(Overlay)
diff --git a/icaruscode/TPC/Simulation/DetSim/CMakeLists.txt b/icaruscode/TPC/Simulation/DetSim/CMakeLists.txt
index ef74511..a2a37d4 100644
--- a/icaruscode/TPC/Simulation/DetSim/CMakeLists.txt
+++ b/icaruscode/TPC/Simulation/DetSim/CMakeLists.txt
@@ -1,72 +1,76 @@
 add_subdirectory(tools)
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
-
-art_make( 
-          EXCLUDE SimWireICARUS_module.cc 
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation 
-                           nug4_ParticleNavigation lardataobj_Simulation
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-		           larevt_CalibrationDBI_Providers
-                           nurandom_RandomUtils_NuRandomService_service
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common
-                           art_Persistency_Provenance
-                           art_Utilities
-			   canvas
-                           ${MF_MESSAGELOGGER}
-                           ${MF_UTILITIES}
-                           ${FHICLCPP}
-                           ${CETLIB}
-                           ${CLHEP}
-                           ${ROOT_GEOM}
-                           ${ROOT_XMLIO}
-                           ${ROOT_GDML}
-                           ${ROOT_BASIC_LIB_LIST}
-        )
+include_directories(${FFTW3_INCLUDE_DIRS})
+art_make(
+	EXCLUDE
+		SimWireICARUS_module.cc
+	MODULE_LIBRARIES 
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		larsim::Simulation
+		nug4::ParticleNavigation
+		lardataobj::Simulation
+		lardata::Utilities
+		larevt::Filters
+		lardataobj::RawData
+		icarus_signal_processing::icarus_signal_processing
+		icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+		larevt::CalibrationDBI_Providers
+		nurandom::RandomUtils_NuRandomService_service
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art_root_io::TFileService_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		CLHEP::Random
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+		)
 
 simple_plugin(SimWireICARUS "module"
-                           larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation 
-                           nug4_ParticleNavigation lardataobj_Simulation
-                           lardata_Utilities
-                           lardataalg_DetectorInfo
-                           larevt_Filters
-                           lardataobj_RawData
-                           icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-                           larevt_CalibrationDBI_Providers
-                           nurandom_RandomUtils_NuRandomService_service
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common
-                           art_Persistency_Provenance
-                           art_Utilities
-	                   canvas
-                           ${MF_MESSAGELOGGER}
-                           ${MF_UTILITIES}
-                           ${FHICLCPP}
-                           ${CETLIB}
-                           ${CLHEP}
-                           ${ROOT_GEOM}
-                           ${ROOT_XMLIO}
-                           ${ROOT_GDML}
-                           ${ROOT_BASIC_LIB_LIST}
-        )
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		larsim::Simulation
+		nug4::ParticleNavigation
+                lardataobj::Simulation
+		lardata::Utilities
+		lardataalg::DetectorInfo
+		larevt::Filters
+		lardataobj::RawData
+		icaruscode::TPC_Utilities_SignalShapingICARUSService_service
+		icarus_signal_processing::icarus_signal_processing
+		larevt::CalibrationDBI_Providers
+		nurandom::RandomUtils_NuRandomService_service
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art_root_io::TFileService_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		CLHEP::Random
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+		)
 
 #install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/Simulation/DetSim/tools/CMakeLists.txt b/icaruscode/TPC/Simulation/DetSim/tools/CMakeLists.txt
index 5e85aef..fece639 100644
--- a/icaruscode/TPC/Simulation/DetSim/tools/CMakeLists.txt
+++ b/icaruscode/TPC/Simulation/DetSim/tools/CMakeLists.txt
@@ -1,69 +1,96 @@
 cet_enable_asserts()
+include_directories(${FFTW3_INCLUDE_DIRS})
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
 
-art_make( 
-          LIB_LIBRARIES      art_Utilities
-                             canvas
-                             ${FHICLCPP}
-                             ${MF_MESSAGELOGGER}
-							 ${ART_FRAMEWORK_SERVICES_BASIC}
-							 ${ART_FRAMEWORK_SERVICES_REGISTRY}
-							 ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-							 cetlib_except
-                             cetlib
-							 
-		  SERVICE_LIBRARIES  icaruscode_TPC_Simulation_DetSim_tools
-		  					 icaruscode_Decode_ChannelMapping
-						     lardata_Utilities
-						     lardata_ArtDataHelper
-						     ${ROOT_BASIC_LIB_LIST}
-						     LIBWDA
-						     ${ART_FRAMEWORK_CORE}
-						     ${ART_FRAMEWORK_PRINCIPAL}
-						     ${ART_FRAMEWORK_SERVICES_REGISTRY}
-						     ${ART_ROOT_IO_TFILE_SUPPORT}
-						     ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-						     ${ART_UTILITIES}
-						     art_Persistency_Common canvas
-						     art_Persistency_Provenance canvas
-						     art_Utilities canvas
-						     ${MF_MESSAGELOGGER}
-						     ${MF_UTILITIES}
-						     ${FHICLCPP}
-						     cetlib cetlib_except
+#art_make(
+#		TOOL_LIBRARIES
+#			larcorealg::Geometry
+#			larevt::CalibrationDBI_IOVData
+#			larevt::CalibrationDBI_Providers
+#			larreco::HitFinder
+#			lardataobj::RecoBase
+#			larcore::Geometry_Geometry_service
+#			lardata::Utilities
+#			lardataalg::DetectorInfo
+#			nurandom::RandomUtils_NuRandomService_service
+#			${ICARUS_FFTW_LIBRARIES}
+#			art::Framework_Core
+#			art::Framework_Principal
+#			art::Framework_Services_Registry
+#			art::Persistency_Common
+#			art::Persistency_Provenance
+#			icarus_signal_processing::icarus_signal_processing	
+#			art_root_io::tfile_support ROOT::Core
+#			art::Framework_Services_Optional_RandomNumberGenerator_service
+#			art_root_io::TFileService_service
+#			art::Framework_Services_System_FileCatalogMetadata_service
+#			art::Utilities
+#			canvas::canvas
+#			messagefacility::MF_MessageLogger
+#			messagefacility::headers
+#			fhiclcpp::fhiclcpp
+#			cetlib::cetlib
+#			Boost::filesystem
+#			Boost::system
+#			CLHEP::Random
+#                        Eigen3::Eigen
+#)
 
-		  TOOL_LIBRARIES     larcorealg_Geometry
-			                 larevt_CalibrationDBI_IOVData
-			                 larevt_CalibrationDBI_Providers
-			                 larreco_HitFinder
-			                 lardataobj_RecoBase
-			                 larcore_Geometry_Geometry_service
-			                 lardata_Utilities
-                             lardataalg_DetectorInfo
-			                 nurandom_RandomUtils_NuRandomService_service
-                             ${ICARUS_FFTW_LIBRARIES}
-  			                 ${ART_FRAMEWORK_CORE}
-			                 ${ART_FRAMEWORK_PRINCIPAL}
-			                 ${ART_FRAMEWORK_SERVICES_REGISTRY}
-			                 art_Persistency_Common
-			                 art_Persistency_Provenance
-			                 ${ART_FRAMEWORK_SERVICES_BASIC}
-			                 ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                             ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-			                 ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			                 ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-			                 art_Utilities
-			                 canvas
-			                 ${MF_MESSAGELOGGER}
-			                 ${MF_UTILITIES}
-			                 ${FHICLCPP}
-			                 ${CETLIB}
-			                 ${Boost_FILESYSTEM_LIBRARY}
-			                 ${Boost_SYSTEM_LIBRARY}
-                             ${CLHEP}
-			                 ${ROOT_BASIC_LIB_LIST}
-	  )
+art_make_library(                
+        SOURCE
+          CoherentNoiseFactorProvider.cxx
+        LIBRARIES
+          art::Framework_Services_Registry
+     	larcore::Geometry_Geometry_service
+) 
+
+foreach ( TOOL
+CorrelatedNoise
+NoiseFromHist
+NoNoise
+RandomNoise
+SBNDataNoiseBoard
+SBNDataNoise
+SBNNoise
+)
+  simple_plugin( ${TOOL} art::tool LIBRARIES larcorealg::Geometry
+  larevt::CalibrationDBI_IOVData larevt::CalibrationDBI_Providers
+  larreco::HitFinder lardataobj::RecoBase larcore::Geometry_Geometry_service
+  lardata::Utilities lardataalg::DetectorInfo
+  nurandom::RandomUtils_NuRandomService_service PkgConfig::FFTW3
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry art::Persistency_Common
+  art::Persistency_Provenance
+  icarus_signal_processing::icarus_signal_processing
+  art_root_io::tfile_support ROOT::Core
+  art::Framework_Services_Optional_RandomNumberGenerator_service
+  art_root_io::TFileService_service
+  art::Framework_Services_System_FileCatalogMetadata_service art::Utilities
+  canvas::canvas messagefacility::MF_MessageLogger messagefacility::headers
+  fhiclcpp::fhiclcpp cetlib::cetlib Boost::filesystem Boost::system
+  CLHEP::Random Eigen3::Eigen SOURCE
+  ${TOOL}_tool.cc )
+endforeach()
+
+  simple_plugin(CoherentNoiseFactor art::service LIBRARIES larcorealg::Geometry
+  larevt::CalibrationDBI_IOVData larevt::CalibrationDBI_Providers
+  larreco::HitFinder lardataobj::RecoBase larcore::Geometry_Geometry_service
+  lardata::Utilities lardataalg::DetectorInfo
+  nurandom::RandomUtils_NuRandomService_service PkgConfig::FFTW3
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry art::Persistency_Common
+  art::Persistency_Provenance
+  icarus_signal_processing::icarus_signal_processing
+  art_root_io::tfile_support ROOT::Core
+  art::Framework_Services_Optional_RandomNumberGenerator_service
+  art_root_io::TFileService_service
+  art::Framework_Services_System_FileCatalogMetadata_service art::Utilities
+  canvas::canvas messagefacility::MF_MessageLogger messagefacility::headers
+  fhiclcpp::fhiclcpp cetlib::cetlib Boost::filesystem Boost::system
+  CLHEP::Random Eigen3::Eigen icaruscode_TPC_Simulation_DetSim_tools
+  SOURCE
+  CoherentNoiseFactor_service.cc) 
 
 install_headers()
 install_source()
diff --git a/icaruscode/TPC/Simulation/Overlay/CMakeLists.txt b/icaruscode/TPC/Simulation/Overlay/CMakeLists.txt
index ebb83c1..c8beca7 100644
--- a/icaruscode/TPC/Simulation/Overlay/CMakeLists.txt
+++ b/icaruscode/TPC/Simulation/Overlay/CMakeLists.txt
@@ -1,37 +1,41 @@
 add_subdirectory(tools)
 
-art_make( 
-          MODULE_LIBRARIES larcorealg_Geometry
-                           larcore_Geometry_Geometry_service
-                           larsim_Simulation 
-                           nug4_ParticleNavigation lardataobj_Simulation
-                           lardata_Utilities
-                           larevt_Filters
-                           lardataobj_RawData
-                           lardataalg_DetectorInfo
-                           icaruscode_TPC_Utilities_SignalShapingICARUSService_service
-		           larevt_CalibrationDBI_Providers
-                           nurandom_RandomUtils_NuRandomService_service
-                           ${ART_FRAMEWORK_CORE}
-                           ${ART_FRAMEWORK_PRINCIPAL}
-                           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                           ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                           ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                           art_Persistency_Common
-                           art_Persistency_Provenance
-                           art_Utilities
-			   canvas
-                           ${MF_MESSAGELOGGER}
-                           ${MF_UTILITIES}
-                           ${FHICLCPP}
-                           ${CETLIB}
-                           ${CLHEP}
-                           ${ROOT_GEOM}
-                           ${ROOT_XMLIO}
-                           ${ROOT_GDML}
-                           ${ROOT_BASIC_LIB_LIST}
-        )
+include_directories(${FFTW3_INCLUDE_DIRS})
+
+art_make(
+	MODULE_LIBRARIES
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		larsim::Simulation
+		nug4::ParticleNavigation
+		lardataobj::Simulation
+		lardata::Utilities
+		larevt::Filters
+		lardataobj::RawData
+		lardataalg::DetectorInfo
+                icarus_signal_processing::icarus_signal_processing
+		icaruscode_TPC_Utilities_SignalShapingICARUSService_service
+		larevt::CalibrationDBI_Providers
+		nurandom::RandomUtils_NuRandomService_service
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art_root_io::TFileService_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		CLHEP::Random
+		ROOT::Geom
+		ROOT::XMLIO
+		ROOT::Gdml
+	)
 
 #install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/Simulation/Overlay/tools/CMakeLists.txt b/icaruscode/TPC/Simulation/Overlay/tools/CMakeLists.txt
index 9ac8513..99d9320 100644
--- a/icaruscode/TPC/Simulation/Overlay/tools/CMakeLists.txt
+++ b/icaruscode/TPC/Simulation/Overlay/tools/CMakeLists.txt
@@ -1,37 +1,39 @@
 cet_enable_asserts()
+include_directories(${FFTW3_INCLUDE_DIRS})
 
-art_make( 
-          TOOL_LIBRARIES  larcorealg_Geometry
-			              larevt_CalibrationDBI_IOVData
-			              larevt_CalibrationDBI_Providers
-			              larreco_HitFinder
-			              lardataobj_RecoBase
-			              larcore_Geometry_Geometry_service
-			              lardata_Utilities
-                                      lardataalg_DetectorInfo
-			              nurandom_RandomUtils_NuRandomService_service
-                          ${ICARUS_FFTW_LIBRARIES}
-  			              ${ART_FRAMEWORK_CORE}
-			              ${ART_FRAMEWORK_PRINCIPAL}
-			              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-			              art_Persistency_Common
-			              art_Persistency_Provenance
-			              ${ART_FRAMEWORK_SERVICES_BASIC}
-			              ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-			              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-			              ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-			              art_Utilities
-			              canvas
-			              ${MF_MESSAGELOGGER}
-			              ${MF_UTILITIES}
-			              ${FHICLCPP}
-			              ${CETLIB}
-			              ${Boost_FILESYSTEM_LIBRARY}
-			              ${Boost_SYSTEM_LIBRARY}
-                          ${CLHEP}
-			              ${ROOT_BASIC_LIB_LIST}
-    )
+art_make(
+	TOOL_LIBRARIES
+			larcorealg::Geometry
+			larevt::CalibrationDBI_IOVData
+			larevt::CalibrationDBI_Providers
+			larreco::HitFinder
+			lardataobj::RecoBase
+			larcore::Geometry_Geometry_service
+			lardata::Utilities
+			lardataalg::DetectorInfo
+			nurandom::RandomUtils_NuRandomService_service
+			${ICARUS_FFTW_LIBRARIES}
+			art::Framework_Core
+			art::Framework_Principal
+			art::Framework_Services_Registry
+			art::Persistency_Common
+			art::Persistency_Provenance
+			icarus_signal_processing::icarus_signal_processing		
+			art_root_io::tfile_support ROOT::Core
+			art::Framework_Services_Optional_RandomNumberGenerator_service
+			art_root_io::TFileService_service
+			art::Framework_Services_System_FileCatalogMetadata_service
+			art::Utilities
+			canvas::canvas
+			messagefacility::MF_MessageLogger
+			messagefacility::headers
+			fhiclcpp::fhiclcpp
+			cetlib::cetlib
+			Boost::filesystem
+			Boost::system
+			CLHEP::Random
+			Eigen3::Eigen
+	)
 
 install_headers()
 install_source()
diff --git a/icaruscode/TPC/Simulation/SpaceCharge/CMakeLists.txt b/icaruscode/TPC/Simulation/SpaceCharge/CMakeLists.txt
index 1ea5184..899e2c0 100644
--- a/icaruscode/TPC/Simulation/SpaceCharge/CMakeLists.txt
+++ b/icaruscode/TPC/Simulation/SpaceCharge/CMakeLists.txt
@@ -1,26 +1,26 @@
-art_make( NO_PLUGINS
-          LIB_LIBRARIES
-	      lardataobj_RecoBase
-          lardata_Utilities
-	      lardataalg_DetectorInfo
-	      larevt_SpaceCharge	
-	      larcorealg_Geometry
-          ${MF_MESSAGELOGGER}
-          cetlib cetlib_except
-	      ${ART_FRAMEWORK_CORE}
-	      ${ART_FRAMEWORK_PRINCIPAL}
-	      ${ART_FRAMEWORK_SERVICES_REGISTRY}
-	      ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-          ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-          art_Persistency_Common canvas
-          art_Persistency_Provenance canvas
-          art_Utilities canvas
-	 
-	 ${FHICLCPP}
-         ${ROOT_BASIC_LIB_LIST}
-	 ${Boost_SYSTEM_LIBRARY}
-        )
+art_make(NO_PLUGINS
+	LIB_LIBRARIES
+		lardataobj::RecoBase
+		lardata::Utilities
+		lardataalg::DetectorInfo
+		larevt::SpaceCharge	
+		larcorealg::Geometry
+                larsim::MCCheater_BackTracker
+                larcore::Geometry_Geometry_service
+		messagefacility::MF_MessageLogger
+		cetlib::cetlib cetlib_except::cetlib_except
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art_root_io::tfile_support ROOT::Core
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art_root_io::TFileService_service
+		art::Persistency_Common canvas::canvas
+		art::Persistency_Provenance
+		art::Utilities
+		fhiclcpp::fhiclcpp
+		Boost::system
+	)
 install_headers()
 install_fhicl()
 install_source()
diff --git a/icaruscode/TPC/Simulation/SpaceChargeServices/CMakeLists.txt b/icaruscode/TPC/Simulation/SpaceChargeServices/CMakeLists.txt
index 1271e0a..40b1f93 100644
--- a/icaruscode/TPC/Simulation/SpaceChargeServices/CMakeLists.txt
+++ b/icaruscode/TPC/Simulation/SpaceChargeServices/CMakeLists.txt
@@ -1,20 +1,17 @@
 simple_plugin(SpaceChargeServiceICARUS "service"
-	icaruscode_TPC_Simulation_SpaceCharge
-	lardataalg_DetectorInfo
-	${ART_FRAMEWORK_CORE}
-	${ART_FRAMEWORK_PRINCIPAL}
-	${ART_FRAMEWORK_SERVICES_REGISTRY}
-	art_Persistency_Common canvas
-	art_Persistency_Provenance canvas
-	${ART_FRAMEWORK_SERVICES_BASIC}
-	${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-	${ART_ROOT_IO_TFILESERVICE_SERVICE}
-	${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-	art_Utilities canvas
-	${MF_MESSAGELOGGER}
-										      
-  	cetlib cetlib_except
-   	${ROOT_BASIC_LIB_LIST}
+	icaruscode::TPC_Simulation_SpaceCharge
+	lardataalg::DetectorInfo
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art::Persistency_Common
+	art::Persistency_Provenance
+	art_root_io::tfile_support ROOT::Core
+	art_root_io::TFileService_service
+	art::Framework_Services_System_FileCatalogMetadata_service
+	art::Utilities canvas::canvas
+	messagefacility::MF_MessageLogger								
+	cetlib::cetlib cetlib_except::cetlib_except
 )
 install_headers()
 install_fhicl()
diff --git a/icaruscode/TPC/Tracking/CMakeLists.txt b/icaruscode/TPC/Tracking/CMakeLists.txt
index 1113d30..cf52317 100644
--- a/icaruscode/TPC/Tracking/CMakeLists.txt
+++ b/icaruscode/TPC/Tracking/CMakeLists.txt
@@ -1,5 +1,5 @@
 
-set( IFDH_ART_DIR $ENV{IFDH_ART_DIR} )
+set(IFDH_ART_DIR$ENV{IFDH_ART_DIR})
 
 add_subdirectory(ICARUSPandora)
 add_subdirectory(cluster3D)
diff --git a/icaruscode/TPC/Tracking/ICARUSPandora/CMakeLists.txt b/icaruscode/TPC/Tracking/ICARUSPandora/CMakeLists.txt
index 687f653..2a8d5aa 100644
--- a/icaruscode/TPC/Tracking/ICARUSPandora/CMakeLists.txt
+++ b/icaruscode/TPC/Tracking/ICARUSPandora/CMakeLists.txt
@@ -1,5 +1,5 @@
 
-# where should the scripts/..xml file be installed?  Perhaps in bin?
+#where should the scripts/..xml file be installed? Perhaps in bin?
 
 install_fhicl()
 
diff --git a/icaruscode/TPC/Tracking/MCS/CMakeLists.txt b/icaruscode/TPC/Tracking/MCS/CMakeLists.txt
index 3a93ab4..1128ecf 100644
--- a/icaruscode/TPC/Tracking/MCS/CMakeLists.txt
+++ b/icaruscode/TPC/Tracking/MCS/CMakeLists.txt
@@ -1,97 +1,98 @@
 
-art_make( 
-             LIB_LIBRARIES    larsim_MCCheater_BackTrackerService_service
-                              larsim_MCCheater_ParticleInventoryService_service
-                              lardataobj_RecoBase
-                              lardata_ArtDataHelper
-                              larsim_Simulation 
-                              nug4_ParticleNavigation lardataobj_Simulation
-                              larevt_Filters
-                              larcorealg_Geometry
-                              larcore_Geometry_Geometry_service
-                              lardata_RecoObjects
-                              lardataobj_AnalysisBase
-                              larreco_Calorimetry
-                              lardata_Utilities
-                              larreco_RecoAlg_ClusterRecoUtil
-                              larreco_RecoAlg_CMTool_CMToolBase
-                              larreco_RecoAlg_CMTool_CMTAlgMerge
-                              larreco_RecoAlg_CMTool_CMTAlgPriority
-                              larreco_RecoAlg_CMTool_CMTAlgMatch
-                              larreco_RecoAlg_CMTool_CMToolApp
-                              ${ROOT_MATHCORE}
-                              ${ROOT_GENVECTOR}
-                              ${ROOT_GEOM}
-                              ${ROOT_BASIC_LIB_LIST}
-                              larreco_RecoAlg_TCAlg
-                              larreco_RecoAlg_ImagePatternAlgs_DataProvider
-                              larreco_RecoAlg_PMAlg
-                              nusimdata_SimulationBase
-                              ${ART_FRAMEWORK_CORE}
-                              ${ART_FRAMEWORK_PRINCIPAL}
-                              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                              ${ART_FRAMEWORK_SERVICES_BASIC}
-                              ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-                              ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-                              ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                              art_Persistency_Common
-                              art_Persistency_Provenance
-                              art_Utilities
-                              canvas
-                              ${MF_MESSAGELOGGER}
-                              ${FHICLCPP}
-                              cetlib cetlib_except
-                              ${CLHEP}
-                              ${ROOT_BASIC_LIB_LIST}
-                              ${ROOT_MINUIT}
-                              ${ROOT_MINUIT2}
-             MODULE_LIBRARIES icaruscode_TPC_Tracking_MCS
-                              larsim_MCCheater_BackTrackerService_service
-                              larsim_MCCheater_ParticleInventoryService_service
-                              lardataobj_RecoBase
-                              lardata_ArtDataHelper
-                              larsim_Simulation 
-                              nug4_ParticleNavigation lardataobj_Simulation
-                              larevt_Filters
-                              larcorealg_Geometry
-                              larcore_Geometry_Geometry_service
-                              lardata_RecoObjects
-                              lardataobj_AnalysisBase
-                              larreco_Calorimetry
-                              lardata_Utilities
-                              larreco_RecoAlg_ClusterRecoUtil
-                              larreco_RecoAlg_CMTool_CMToolBase
-                              larreco_RecoAlg_CMTool_CMTAlgMerge
-                              larreco_RecoAlg_CMTool_CMTAlgPriority
-                              larreco_RecoAlg_CMTool_CMTAlgMatch
-                              larreco_RecoAlg_CMTool_CMToolApp
-                              ${ROOT_MATHCORE}
-                              ${ROOT_GENVECTOR}
-                              ${ROOT_GEOM}
-                              ${ROOT_BASIC_LIB_LIST}
-                              larreco_RecoAlg_TCAlg
-                              larreco_RecoAlg_ImagePatternAlgs_DataProvider
-                              larreco_RecoAlg_PMAlg
-                              nusimdata_SimulationBase
-                              ${ART_FRAMEWORK_CORE}
-                              ${ART_FRAMEWORK_PRINCIPAL}
-                              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                              ${ART_FRAMEWORK_SERVICES_BASIC}
-                              ${ART_FRAMEWORK_SERVICES_OPTIONAL}
-                              ${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
-                              ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                              art_Persistency_Common
-                              art_Persistency_Provenance
-                              art_Utilities
-                              canvas
-                              ${MF_MESSAGELOGGER}
-                              ${FHICLCPP}
-                              cetlib cetlib_except
-                              ${CLHEP}
-                              ${ROOT_BASIC_LIB_LIST}
-                              ${ROOT_MINUIT}
-                              ${ROOT_MINUIT2}
-        )
+art_make(
+	LIB_LIBRARIES
+		larsim::MCCheater_BackTrackerService_service
+		larsim::MCCheater_ParticleInventoryService_service
+		lardataobj::RecoBase
+		lardata::ArtDataHelper
+		larsim::Simulation
+		nug4::ParticleNavigation
+		lardataobj::Simulation
+		larevt::Filters
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		lardata::RecoObjects
+		lardataobj::AnalysisBase
+		larreco::Calorimetry
+		lardata::Utilities
+		larreco::RecoAlg_ClusterRecoUtil
+		larreco::RecoAlg_CMTool_CMToolBase
+		larreco::RecoAlg_CMTool_CMTAlgMerge
+		larreco::RecoAlg_CMTool_CMTAlgPriority
+		larreco::RecoAlg_CMTool_CMTAlgMatch
+		larreco::RecoAlg_CMTool_CMToolApp
+		${ROOT_MATHCORE}
+		ROOT::GenVector
+		ROOT::Geom
+		larreco::RecoAlg_TCAlg
+		larreco::RecoAlg_ImagePatternAlgs_DataProvider
+		larreco::RecoAlg_PMAlg
+		nusimdata::SimulationBase
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		
+		${ART_FRAMEWORK_SERVICES_OPTIONAL}
+		${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib cetlib_except::cetlib_except
+		CLHEP::Random
+		${ROOT_MINUIT}
+		${ROOT_MINUIT2}
+	MODULE_LIBRARIES
+		icaruscode::TPC_Tracking_MCS
+		larsim::MCCheater_BackTrackerService_service
+		larsim::MCCheater_ParticleInventoryService_service
+		lardataobj::RecoBase
+		lardata::ArtDataHelper
+		larsim::Simulation
+		nug4::ParticleNavigation
+		lardataobj::Simulation
+		larevt::Filters
+		larcorealg::Geometry
+		larcore::Geometry_Geometry_service
+		lardata::RecoObjects
+		lardataobj::AnalysisBase
+		larreco::Calorimetry
+		lardata::Utilities
+		larreco::RecoAlg_ClusterRecoUtil
+		larreco::RecoAlg_CMTool_CMToolBase
+		larreco::RecoAlg_CMTool_CMTAlgMerge
+		larreco::RecoAlg_CMTool_CMTAlgPriority
+		larreco::RecoAlg_CMTool_CMTAlgMatch
+		larreco::RecoAlg_CMTool_CMToolApp
+		${ROOT_MATHCORE}
+		ROOT::GenVector
+		ROOT::Geom
+		larreco::RecoAlg_TCAlg
+		larreco::RecoAlg_ImagePatternAlgs_DataProvider
+		larreco::RecoAlg_PMAlg
+		nusimdata::SimulationBase
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		
+		${ART_FRAMEWORK_SERVICES_OPTIONAL}
+		${ART_FRAMEWORK_SERVICES_OPTIONAL_TFILESERVICE_SERVICE}
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art::Persistency_Common
+		art::Persistency_Provenance
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		cetlib_except::cetlib_except
+		CLHEP::Random
+		${ROOT_MINUIT}
+		${ROOT_MINUIT2}
+	)
 
 
 install_headers()
diff --git a/icaruscode/TPC/Tracking/cluster3D/CMakeLists.txt b/icaruscode/TPC/Tracking/cluster3D/CMakeLists.txt
index 4dc748b..bb21323 100644
--- a/icaruscode/TPC/Tracking/cluster3D/CMakeLists.txt
+++ b/icaruscode/TPC/Tracking/cluster3D/CMakeLists.txt
@@ -25,7 +25,10 @@ art_make(LIB_LIBRARIES
            fhiclcpp::fhiclcpp
            cetlib::cetlib
            cetlib_except::cetlib_except
-          TOOL_LIBRARIES larreco_RecoAlg_Cluster3DAlgs
+          TOOL_LIBRARIES larreco::RecoAlg_Cluster3DAlgs
+           art_root_io::tfile_support
+           larevt::headers
+           Eigen3::Eigen
         )
 
 install_headers()
diff --git a/icaruscode/TPC/Utilities/CMakeLists.txt b/icaruscode/TPC/Utilities/CMakeLists.txt
index 038dc90..f053b11 100644
--- a/icaruscode/TPC/Utilities/CMakeLists.txt
+++ b/icaruscode/TPC/Utilities/CMakeLists.txt
@@ -1,62 +1,64 @@
 add_subdirectory(tools)
+include_directories(${FFTW3_INCLUDE_DIRS})
+link_directories(${FFTW3_LIBRARY_DIRS})
+
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
 
-set( icarus_util_lib_list
-                        larcorealg_Geometry
-                        larevt_CalibrationDBI_IOVData
-                        larevt_CalibrationDBI_Providers
-                        larreco_HitFinder
-                        lardataobj_RecoBase
-                        larcore_Geometry_Geometry_service
-                        lardata_Utilities
-                        nurandom_RandomUtils_NuRandomService_service
-                        ${ICARUS_FFTW_LIBRARIES}
-                        ${ART_FRAMEWORK_CORE}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        art_Persistency_Common
-                        art_Framework_IO
-                        art_Framework_IO_detail
-                        art_Persistency_Provenance
-                        ${ART_FRAMEWORK_SERVICES_BASIC}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                        ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-                        art_Framework_Services_System_TriggerNamesService_service
-                        art_Utilities
-                        canvas
-                        ${MF_MESSAGELOGGER}
-                        ${MF_UTILITIES}
-                        ${FHICLCPP}
-                        ${CETLIB}
-                        ${Boost_FILESYSTEM_LIBRARY}
-                        ${Boost_SYSTEM_LIBRARY}
-                        ${CLHEP}
-                        ${ROOT_BASIC_LIB_LIST}
-    )
+set(icarus_util_lib_list
+	larcorealg::Geometry
+	larevt::CalibrationDBI_IOVData
+	larevt::CalibrationDBI_Providers
+	larreco::HitFinder
+	lardataobj::RecoBase
+	larcore::Geometry_Geometry_service
+	lardata::Utilities
+	nurandom::RandomUtils_NuRandomService_service
+	${ICARUS_FFTW_LIBRARIES}
+	art::Framework_Core
+	art::Framework_Principal
+	art::Framework_Services_Registry
+	art::Persistency_Common
+	art::Framework_IO
+	art::Framework_IO_detail
+	art::Persistency_Provenance
+	
+	art_root_io::tfile_support ROOT::Core
+	art::Framework_Services_Optional_RandomNumberGenerator_service
+	art_root_io::TFileService_service
+	art::Framework_Services_System_FileCatalogMetadata_service
+	art::Framework_Services_System_TriggerNamesService_service
+	art::Utilities
+	canvas::canvas
+	messagefacility::MF_MessageLogger
+	messagefacility::headers
+	fhiclcpp::fhiclcpp
+	cetlib::cetlib
+	Boost::filesystem
+	Boost::system
+	CLHEP::Random
+)
 
-art_make( 
-#          LIBRARY_NAME  icaruscode_TPC_Utilities
-#          LIB_LIBRARIES ${icarus_util_lib_list}
+art_make(
+# LIBRARY_NAME icaruscode_TPC_Utilities
+# LIB_LIBRARIES$ {icarus_util_lib_list}
 #
-          SERVICE_LIBRARIES 
-                        ${icarus_util_lib_list}
+	SERVICE_LIBRARIES
+		${icarus_util_lib_list}
 
-          MODULE_LIBRARIES
-                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_FRAMEWORK_PRINCIPAL}
-                        ${ART_FRAMEWORK_CORE}
-                        canvas
-                        ${MF_MESSAGELOGGER}
-                        hep_concurrency
-                        ${FHICLCPP}
-                        ${CETLIB}
-                        ${ROOT_CORE}
-       )
+	MODULE_LIBRARIES
+		art_root_io::TFileService_service
+		art_root_io::tfile_support ROOT::Core
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		hep_concurrency::hep_concurrency
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		ROOT::Core
+	)
 
 
 install_headers()
diff --git a/icaruscode/TPC/Utilities/tools/CMakeLists.txt b/icaruscode/TPC/Utilities/tools/CMakeLists.txt
index 0bcfeaf..2a413f2 100644
--- a/icaruscode/TPC/Utilities/tools/CMakeLists.txt
+++ b/icaruscode/TPC/Utilities/tools/CMakeLists.txt
@@ -1,38 +1,40 @@
 cet_enable_asserts()
+include_directories(${FFTW3_INCLUDE_DIRS})
+link_directories(${FFTW3_LIBRARY_DIRS})
+
 
 add_definitions(-DEIGEN_FFTW_DEFAULT)
 
-art_make(   
-            TOOL_LIBRARIES  
-            larcorealg_Geometry
-            larevt_CalibrationDBI_IOVData
-            larevt_CalibrationDBI_Providers
-            lardataobj_RecoBase
-            larcore_Geometry_Geometry_service
-            lardata_Utilities
-            lardataalg_DetectorInfo
-            ${ICARUS_FFTW_LIBRARIES}
-            ${ART_FRAMEWORK_CORE}
-            ${ART_FRAMEWORK_PRINCIPAL}
-            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-            art_Persistency_Common
-            art_Persistency_Provenance
-            ${ART_FRAMEWORK_SERVICES_BASIC}
-            ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-            ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-            ${ART_FRAMEWORK_SERVICES_SYSTEM_FILECATALOGMETADATA_SERVICE}
-            art_Utilities
-            canvas
-            ${MF_MESSAGELOGGER}
-            ${MF_UTILITIES}
-            ${FHICLCPP}
-            ${CETLIB}
-            ${Boost_FILESYSTEM_LIBRARY}
-            ${Boost_SYSTEM_LIBRARY}
-            ${CLHEP}
-            ${ROOT_BASIC_LIB_LIST}
-       )
+art_make(
+	TOOL_LIBRARIES
+		larcorealg::Geometry
+		larevt::CalibrationDBI_IOVData
+		larevt::CalibrationDBI_Providers
+		lardataobj::RecoBase
+		larcore::Geometry_Geometry_service
+		lardata::Utilities
+		lardataalg::DetectorInfo
+		${ICARUS_FFTW_LIBRARIES}
+		art::Framework_Core
+		art::Framework_Principal
+		art::Framework_Services_Registry
+		art::Persistency_Common
+		art::Persistency_Provenance
+		icarus_signal_processing::icarus_signal_processing	
+		art_root_io::tfile_support ROOT::Core
+		art::Framework_Services_Optional_RandomNumberGenerator_service
+		art_root_io::TFileService_service
+		art::Framework_Services_System_FileCatalogMetadata_service
+		art::Utilities
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		messagefacility::headers
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		Boost::filesystem
+		Boost::system
+		CLHEP::Random
+	)
 
 install_headers()
 install_source()
diff --git a/icaruscode/Utilities/CMakeLists.txt b/icaruscode/Utilities/CMakeLists.txt
index 13ca496..d195dc9 100644
--- a/icaruscode/Utilities/CMakeLists.txt
+++ b/icaruscode/Utilities/CMakeLists.txt
@@ -1,42 +1,44 @@
 
 art_make(
-  EXCLUDE
-    "SaveConfigurationIntoTFile_module.cc"
-    "DummyFilter_module.cc"
-    "DummyProducer_module.cc"
-    "DuplicateEventTracker_service.cc"
-  LIB_LIBRARIES
-    ${ART_ROOT_IO_ROOTDB}
-    SQLite::SQLite3
-    cetlib_except
-    cetlib
-    fhiclcpp
-    hep_concurrency # required by fhicl::ParameterSetRegistry
-    ROOT::Tree
-    ROOT::Core
-    ROOT::RIO
-)
+	EXCLUDE
+		"SaveConfigurationIntoTFile_module.cc"
+		"DummyFilter_module.cc"
+		"DummyProducer_module.cc"
+		"DuplicateEventTracker_service.cc"
+	LIB_LIBRARIES
+		art_root_io::RootDB
+		SQLite::SQLite3
+                lardata::Utilities
+		canvas::canvas
+		cetlib_except::cetlib_except
+		cetlib::cetlib
+		fhiclcpp::fhiclcpp
+		hep_concurrency::hep_concurrency # required by fhicl::ParameterSetRegistry
+		ROOT::Tree
+		ROOT::Core
+		ROOT::RIO
+	)
 
 simple_plugin(SaveConfigurationIntoTFile "module"
-              ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-              ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
-              ${ART_FRAMEWORK_SERVICES_REGISTRY}
-              ${ART_FRAMEWORK_PRINCIPAL}
-              ${ART_FRAMEWORK_CORE}
-              canvas
-              ${MF_MESSAGELOGGER}
-              hep_concurrency
-              ${FHICLCPP}
-              ${CETLIB}
-              ${ROOT_CORE}
-)
+		art_root_io::TFileService_service
+		art_root_io::tfile_support
+		art::Framework_Services_Registry
+		art::Framework_Principal
+		art::Framework_Core
+		canvas::canvas
+		messagefacility::MF_MessageLogger
+		hep_concurrency::hep_concurrency
+		fhiclcpp::fhiclcpp
+		cetlib::cetlib
+		ROOT::Core
+	)
 
 
 simple_plugin(DuplicateEventTracker "service"
-              icaruscode_Utilities
-              ${ART_FRAMEWORK_PRINCIPAL}
-              ${MF_MESSAGELOGGER}
-)
+		icaruscode::Utilities
+		art::Framework_Principal
+		messagefacility::MF_MessageLogger
+	)
 
 simple_plugin(DummyFilter "module")
 simple_plugin(DummyProducer "module")
diff --git a/test/PMT/Data/CMakeLists.txt b/test/PMT/Data/CMakeLists.txt
index 7cf465c..a4ecd69 100644
--- a/test/PMT/Data/CMakeLists.txt
+++ b/test/PMT/Data/CMakeLists.txt
@@ -1,5 +1,7 @@
 cet_test(WaveformBaseline_test
   LIBRARIES
-    sbnobj_ICARUS_PMT_Data
+    sbnobj::ICARUS_PMT_Data
+    icarusalg::Utilities
+    lardataalg::DetectorInfo
   USE_BOOST_UNIT
   )
diff --git a/test/PMT/Trigger/Algorithms/CMakeLists.txt b/test/PMT/Trigger/Algorithms/CMakeLists.txt
index 490bbb3..dd80795 100644
--- a/test/PMT/Trigger/Algorithms/CMakeLists.txt
+++ b/test/PMT/Trigger/Algorithms/CMakeLists.txt
@@ -1,6 +1,6 @@
 cet_test(TriggerInfo_t_test
   LIBRARIES
-    sbnobj_ICARUS_PMT_Trigger_Data
+    sbnobj::ICARUS_PMT_Trigger_Data
   USE_BOOST_UNIT
   )
 
diff --git a/test/PMT/Trigger/Data/CMakeLists.txt b/test/PMT/Trigger/Data/CMakeLists.txt
index 0535746..aa0aa10 100644
--- a/test/PMT/Trigger/Data/CMakeLists.txt
+++ b/test/PMT/Trigger/Data/CMakeLists.txt
@@ -1,6 +1,7 @@
 cet_test(TriggerGateData_test
   LIBRARIES
-    lardataalg_DetectorInfo
-    larcorealg_CoreUtils
+    lardataalg::DetectorInfo
+    larcorealg::CoreUtils
+    sbnobj::ICARUS_PMT_Trigger_Data
   USE_BOOST_UNIT
   )
diff --git a/test/PMT/Trigger/Utilities/CMakeLists.txt b/test/PMT/Trigger/Utilities/CMakeLists.txt
index 8be5d9c..4a58d59 100644
--- a/test/PMT/Trigger/Utilities/CMakeLists.txt
+++ b/test/PMT/Trigger/Utilities/CMakeLists.txt
@@ -1,6 +1,6 @@
 cet_test(TrackedTriggerGate_test
   LIBRARIES
-    sbnobj_ICARUS_PMT_Trigger_Data
+    sbnobj::ICARUS_PMT_Trigger_Data
   USE_BOOST_UNIT
   )
 
diff --git a/test/ci/CMakeLists.txt b/test/ci/CMakeLists.txt
index c63cd6d..2e54729 100644
--- a/test/ci/CMakeLists.txt
+++ b/test/ci/CMakeLists.txt
@@ -6,7 +6,7 @@
 # 
 # In order to achieve that:
 # 
-# 1. there is no way (I know of) with cetbuildtools of installing the scripts
+# 1. there is no way (I know of) with cetbuildtools of installing the scripts ### MIGRATE-ACTION-REQUIRED: remove
 #    into `${ICARUSCODE_DIR}/test/ci` directory: `install_scripts(AS_TEST)`
 #    installs all directly into `${ICARUSCODE_DIR}/test`
 # 2. the integration test configuration (`ci_tests.cfg`) stores the command for
